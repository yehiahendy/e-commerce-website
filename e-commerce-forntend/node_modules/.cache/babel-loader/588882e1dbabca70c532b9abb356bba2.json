{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Zag System summer Training\\\\e-commerce-website\\\\e-commerce-forntend\\\\src\\\\user\\\\Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Layout from '../core/Layout';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    success: false\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    success\n  } = values;\n\n  const handelChanges = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  };\n\n  const sinupSubmit = user => {\n    return fetch(\"http://localhost:8000/api/signup\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(Response => {\n      return Response.json();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    sinupSubmit({\n      name,\n      email,\n      password\n    }) //this part to get the error msg and clear the text field\n    .then(data => {\n      console.log(data.err);\n\n      if (data.error) {\n        console.log(\"cd\");\n        setValues({ ...values,\n          error: data.error,\n          success: false\n        });\n      } else {\n        setValues({ ...values,\n          name: '',\n          email: '',\n          password: '',\n          error: false,\n          success: true\n        });\n      }\n    });\n  };\n\n  const creatUi = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          onChange: handelChanges('name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control \",\n          onChange: handelChanges('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          onChange: handelChanges('password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" btn btn-primary\",\n        onClick: submitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  };\n\n  const showErrorMsg = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? '' : 'none'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  };\n\n  const showSuccessMsg = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      style: {\n        display: success ? '' : 'none'\n      },\n      children: [\"New account is created please\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \" Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Sign up Page\",\n    discreption: \"This is the sign up page for Ecommerce website \",\n    className: \"container col-md-8 offset-md-2\",\n    children: [showSuccessMsg(), showErrorMsg(), creatUi()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Signup, \"n9NoNAESxde5gh8nrYPXrsckZP4=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/Work/Zag System summer Training/e-commerce-website/e-commerce-forntend/src/user/Signup.jsx"],"names":["React","useState","Layout","Link","Signup","values","setValues","name","email","password","error","success","handelChanges","event","target","value","sinupSubmit","user","fetch","method","headers","body","JSON","stringify","then","Response","json","catch","console","log","submitHandler","e","preventDefault","data","err","creatUi","showErrorMsg","display","showSuccessMsg"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { Link } from 'react-router-dom';\r\nconst Signup = () => {\r\n   const [values,setValues] = useState({\r\n        name :'',\r\n        email : '',\r\n        password : '',\r\n        error : '',\r\n        success : false\r\n    });\r\n    const {name,email,password,error,success} = values;\r\nconst handelChanges = name => event => {\r\n    setValues({...values,error :false,[name]:event.target.value})\r\n\r\n}\r\nconst sinupSubmit = user =>{\r\n\r\n   return (fetch(\"http://localhost:8000/api/signup\", {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(Response =>{\r\n    \r\n        return Response.json();\r\n\r\n    })\r\n    .catch(error => {\r\n        console.log(error)\r\n    }));\r\n\r\n}\r\nconst submitHandler = (e) =>{\r\ne.preventDefault();\r\nsinupSubmit({name,email,password})\r\n//this part to get the error msg and clear the text field\r\n.then(                             \r\n    data => {\r\n        console.log(data.err);\r\n        if(data.error)\r\n        {\r\n            console.log(\"cd\");\r\n            setValues({...values,error:data.error,success: false})\r\n        }\r\n        else{\r\n            \r\n            setValues({...values,\r\n                name :'',\r\n                email : '',\r\n                password : '',\r\n                error : false,\r\n                success : true\r\n            })\r\n        }\r\n    });\r\n\r\n}\r\nconst creatUi = () => {\r\n    return(\r\n        <form>\r\n            <div className = \"form-group\">\r\n                <label className =\"text-muted\">name</label>\r\n                <input type=\"text\" className = \"form-control\" onChange = {handelChanges('name')} />\r\n            </div>\r\n            <div className = \"form-group\">\r\n                <label className =\"text-muted\">email</label>\r\n                <input type=\"email\" className = \"form-control \" onChange = {handelChanges('email')} />\r\n            </div>\r\n            <div className = \"form-group\">\r\n                <label className =\"text-muted\">password</label>\r\n                <input type=\"password\" className = \"form-control\" onChange = {handelChanges('password')} />\r\n            </div>\r\n            <button className = \" btn btn-primary\" onClick={submitHandler}>Submit</button>\r\n        </form>\r\n    );\r\n}\r\nconst showErrorMsg = () => {\r\n    return(\r\n        <div className = \"alert alert-danger\" style = {{display : error ? '' :'none'}}>{error}</div>\r\n    );\r\n}\r\nconst showSuccessMsg = () => {\r\n    return(\r\n        <div className = \"alert alert-info\" style = {{display : success ? '' :'none'}}>\r\n            New account is created please\r\n            <Link to=\"/signin\"> Sign in</Link>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nreturn(\r\n<Layout title =\"Sign up Page\" discreption = \"This is the sign up page for Ecommerce website \" className = \"container col-md-8 offset-md-2\">\r\n    {showSuccessMsg()}\r\n    {showErrorMsg()}\r\n    {creatUi()}\r\n\r\n</Layout>\r\n\r\n);\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}
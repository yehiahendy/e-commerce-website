{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Zag System summer Training\\\\e-commerce-website\\\\e-commerce-forntend\\\\src\\\\core\\\\CheckOut.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getProduct, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './CartHelper';\nimport { isAuthenticate } from '../user/auth';\nimport { Link } from 'react-router-dom'; // import \"braintree-web\"; // not using this package\n\nimport DropIn from 'braintree-web-drop-in-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = ({\n  products,\n  setRun = f => f,\n  run = undefined\n}) => {\n  _s();\n\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    reload: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n\n  const userId = isAuthenticate() && isAuthenticate().user._id;\n\n  const token = isAuthenticate() && isAuthenticate().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        setData({ ...data,\n          error: data.error\n        });\n      } else {\n        console.log(data);\n        setData({\n          clientToken: data.clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, [data.reload]);\n\n  const handleAddress = event => {\n    setData({ ...data,\n      address: event.target.value\n    });\n  };\n\n  const getTotal = () => {\n    return products !== null && products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticate() ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showDropIn()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signin\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Sign in to checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  };\n\n  let deliveryAddress = data.address;\n\n  const buy = () => {\n    setData({\n      loading: true\n    }); // send the nonce to your server\n    // nonce = data.instance.requestPaymentMethod()\n\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      // console.log(data);\n      nonce = data.nonce; // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n      // and also total to be charged\n      // console.log(\n      //     \"send nonce and total to process: \",\n      //     nonce,\n      //     getTotal(products)\n      // );\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        console.log(response); // empty cart\n        // create order\n\n        const createOrderData = {\n          products: products,\n          transaction_id: response.transaction.id,\n          amount: response.transaction.amount,\n          address: deliveryAddress\n        };\n        createOrder(userId, token, createOrderData).then(response => {\n          emptyCart(() => {\n            setRun(!run); // run useEffect in parent Cart\n\n            console.log('payment success and empty cart');\n            setData({\n              loading: false,\n              success: true,\n              reload: true\n            });\n          });\n        }).catch(error => {\n          console.log(error);\n          setData({\n            loading: false\n          });\n        });\n      }).catch(error => {\n        console.log(error);\n        setData({\n          loading: false\n        });\n      });\n    }).catch(error => {\n      // console.log(\"dropin error: \", error);\n      setData({ ...data,\n        error: error.message\n      });\n    });\n  };\n\n  const showDropIn = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    onBlur: () => setData({ ...data,\n      error: ''\n    }),\n    children: data.clientToken !== null && products !== null && products.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gorm-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Delivery address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleAddress,\n          className: \"form-control\",\n          value: data.address,\n          placeholder: \"Type your delivery address here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DropIn, {\n        options: {\n          authorization: data.clientToken\n        },\n        onInstance: instance => data.instance = instance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buy,\n        className: \"btn btn-success btn-block\",\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n\n  const showError = error => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n\n  const showSuccess = success => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    children: \"Thanks! Your payment was successful!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n\n  const showLoading = loading => loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"text-danger\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 47\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total: $\", getTotal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), showLoading(data.loading), showSuccess(data.success), showError(data.error), showCheckout()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"qDlx9F2Haa9T/uXqaUXNy8tQQgA=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["D:/Work/Zag System summer Training/e-commerce-website/e-commerce-forntend/src/core/CheckOut.jsx"],"names":["React","useState","useEffect","getProduct","getBraintreeClientToken","processPayment","createOrder","emptyCart","isAuthenticate","Link","DropIn","Checkout","products","setRun","f","run","undefined","data","setData","loading","success","reload","clientToken","error","instance","address","userId","user","_id","token","getToken","then","console","log","handleAddress","event","target","value","getTotal","reduce","currentValue","nextValue","count","price","showCheckout","showDropIn","deliveryAddress","buy","nonce","getNonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","response","createOrderData","transaction_id","transaction","id","catch","message","length","authorization","showError","display","showSuccess","showLoading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getProduct, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\r\nimport { emptyCart } from './CartHelper';\r\nimport { isAuthenticate } from '../user/auth';\r\nimport { Link } from 'react-router-dom';\r\n// import \"braintree-web\"; // not using this package\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        reload:false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const userId = isAuthenticate() && isAuthenticate().user._id;\r\n    const token = isAuthenticate() && isAuthenticate().token;\r\n\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setData({ ...data, error: data.error });\r\n            } else {\r\n                console.log(data);\r\n                setData({ clientToken: data.clientToken });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, [data.reload]);\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const getTotal = () => {\r\n        return products!== null && products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticate() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    let deliveryAddress = data.address;\r\n\r\n    const buy = () => {\r\n        setData({ loading: true });\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                // console.log(data);\r\n                nonce = data.nonce;\r\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n                // and also total to be charged\r\n                // console.log(\r\n                //     \"send nonce and total to process: \",\r\n                //     nonce,\r\n                //     getTotal(products)\r\n                // );\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                };\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                        // empty cart\r\n                        // create order\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        };\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    console.log('payment success and empty cart');\r\n                                    setData({\r\n                                        loading: false,\r\n                                        success: true,\r\n                                        reload:true\r\n                                    });\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                setData({ loading: false });\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        setData({ loading: false });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log(\"dropin error: \", error);\r\n                setData({ ...data, error: error.message });\r\n            });\r\n    };\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: '' })}>\r\n            {data.clientToken !== null && products !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"gorm-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                        />\r\n                    </div>\r\n\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\r\n                        Pay\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            Thanks! Your payment was successful!\r\n        </div>\r\n    );\r\n\r\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FieldFeedbackWhenValid = void 0;
var React = require("react");
var PropTypes = require("prop-types");
var FieldFeedbacks_1 = require("./FieldFeedbacks");
var FormWithConstraints_1 = require("./FormWithConstraints");
var FieldFeedbackWhenValid = (function (_super) {
    __extends(FieldFeedbackWhenValid, _super);
    function FieldFeedbackWhenValid() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            fieldIsValid: undefined
        };
        _this.fieldWillValidate = function (fieldName) {
            if (fieldName === _this.context.fieldFeedbacks.fieldName) {
                _this.setState({ fieldIsValid: undefined });
            }
        };
        _this.fieldDidValidate = function (field) {
            if (field.name === _this.context.fieldFeedbacks.fieldName) {
                _this.setState({ fieldIsValid: field.isValid() });
            }
        };
        _this.fieldDidReset = function (field) {
            if (field.name === _this.context.fieldFeedbacks.fieldName) {
                _this.setState({ fieldIsValid: undefined });
            }
        };
        return _this;
    }
    FieldFeedbackWhenValid.prototype.componentDidMount = function () {
        this.context.form.addFieldWillValidateEventListener(this.fieldWillValidate);
        this.context.form.addFieldDidValidateEventListener(this.fieldDidValidate);
        this.context.form.addFieldDidResetEventListener(this.fieldDidReset);
    };
    FieldFeedbackWhenValid.prototype.componentWillUnmount = function () {
        this.context.form.removeFieldWillValidateEventListener(this.fieldWillValidate);
        this.context.form.removeFieldDidValidateEventListener(this.fieldDidValidate);
        this.context.form.removeFieldDidResetEventListener(this.fieldDidReset);
    };
    FieldFeedbackWhenValid.prototype.render = function () {
        var _a = this.props, style = _a.style, otherProps = __rest(_a, ["style"]);
        return this.state.fieldIsValid ? (React.createElement("span", __assign({}, otherProps, { style: __assign({ display: 'block' }, style) }))) : null;
    };
    FieldFeedbackWhenValid.contextTypes = {
        form: PropTypes.instanceOf(FormWithConstraints_1.FormWithConstraints).isRequired,
        fieldFeedbacks: PropTypes.instanceOf(FieldFeedbacks_1.FieldFeedbacks).isRequired
    };
    return FieldFeedbackWhenValid;
}(React.Component));
exports.FieldFeedbackWhenValid = FieldFeedbackWhenValid;
//# sourceMappingURL=FieldFeedbackWhenValid.js.map
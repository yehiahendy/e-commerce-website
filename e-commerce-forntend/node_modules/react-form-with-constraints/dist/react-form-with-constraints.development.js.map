{"version":3,"file":"react-form-with-constraints.development.js","sources":["../src/assert.ts","../src/EventEmitter.ts","../src/clearArray.ts","../src/FieldFeedbackType.ts","../src/Field.ts","../src/FieldsStore.ts","../src/InputElement.ts","../src/notUndefined.ts","../src/withFieldDidResetEventEmitter.ts","../src/withFieldDidValidateEventEmitter.ts","../src/withFieldWillValidateEventEmitter.ts","../src/withValidateFieldEventEmitter.ts","../src/FormWithConstraints.tsx","../src/FieldFeedbacks.tsx","../src/Async.tsx","../src/FieldFeedbackWhenValid.tsx","../src/FieldFeedback.tsx","../src/Input.tsx","../src/deepForEach.ts"],"sourcesContent":["// https://devblogs.microsoft.com/typescript/announcing-typescript-3-7/#assertion-functions\nexport function assert(condition: boolean, message?: string): asserts condition {\n  // error TS2569: Type 'IArguments' is not an array type or a string type.\n  // Use compiler option '--downlevelIteration' to allow iterating of iterators.\n  //console.assert(...arguments);\n\n  if (message === undefined) {\n    console.assert(condition);\n  } else {\n    console.assert(condition, message);\n  }\n}\n","import { assert } from './assert';\n\n// FIXME [Proposal: Variadic Kinds -- Give specific types to variadic functions](https://github.com/Microsoft/TypeScript/issues/5453)\n\ntype Listener<Args extends any[], ReturnType> = (...args: Args) => ReturnType | Promise<ReturnType>;\n\nexport class EventEmitter<ListenerArgs extends any[], ListenerReturnType> {\n  listeners = new Map<string, Listener<ListenerArgs, ListenerReturnType>[]>();\n\n  emitSync(eventName: string, ...args: ListenerArgs) {\n    const listeners = this.getListeners(eventName);\n    const ret = new Array<ListenerReturnType>();\n    listeners.forEach(listener => ret.push(listener(...args) as ListenerReturnType));\n    return ret;\n  }\n\n  async emitAsync(eventName: string, ...args: ListenerArgs) {\n    const listeners = this.getListeners(eventName);\n    const ret = new Array<ListenerReturnType>();\n    for (let i = 0; i < listeners.length; i++) {\n      // Why await? Two cases:\n      // - listener does not return a Promise:\n      //   => await changes nothing: the next listener call happens when the current one is done\n      // - listener returns a Promise:\n      //   => wait for the listener call to finish (e.g listeners are executed in sequence),\n      //      without we would call each listener without waiting for their results\n      // eslint-disable-next-line no-await-in-loop\n      ret.push(await listeners[i](...args));\n    }\n    return ret;\n  }\n\n  private getListeners(eventName: string) {\n    const listeners = this.listeners.get(eventName);\n\n    // Assert disabled: an event can be emitted even without listeners\n    //assert(listeners !== undefined, `Unknown event '${eventName}'`);\n\n    if (listeners !== undefined) {\n      assert(listeners.length > 0, `No listener for event '${eventName}'`);\n      return listeners;\n    }\n    return [];\n  }\n\n  addListener(eventName: string, listener: Listener<ListenerArgs, ListenerReturnType>) {\n    if (!this.listeners.has(eventName)) this.listeners.set(eventName, []);\n    const listeners = this.listeners.get(eventName)!;\n    assert(!listeners.includes(listener), `Listener already added for event '${eventName}'`);\n    listeners.push(listener);\n  }\n\n  // [\"removeListener() will remove, at most, one instance of a listener from the listener array.\n  // If any single listener has been added multiple times to the listener array for the specified eventName,\n  // then removeListener() must be called multiple times to remove each instance.\"](https://nodejs.org/api/events.html#events_emitter_removelistener_eventname_listener)\n  removeListener(eventName: string, listener: Listener<ListenerArgs, ListenerReturnType>) {\n    const listeners = this.listeners.get(eventName);\n    assert(listeners !== undefined, `Unknown event '${eventName}'`);\n\n    const index = listeners.lastIndexOf(listener);\n    assert(index > -1, `Listener not found for event '${eventName}'`);\n    listeners.splice(index, 1);\n\n    if (listeners.length === 0) this.listeners.delete(eventName);\n  }\n}\n","// [How do I empty an array in JavaScript?](https://stackoverflow.com/q/1232040)\nexport function clearArray<T>(array: T[]) {\n  while (array.length) {\n    array.pop();\n  }\n}\n","// Not inside FieldFeedback to avoid a circular dependency:\n// Async.js -> FormWithConstraints.js -> FieldsStore.js -> Field.js -> FieldFeedback.js -> Async.js\n// Field.js -> FieldFeedback.js -> FormWithConstraints.js -> FieldsStore.js -> Field.js\n// FieldFeedback.js -> FormWithConstraints.js -> FieldsStore.js -> Field.js -> FieldFeedback.js\n// FieldFeedbackWhenValid.js -> FormWithConstraints.js -> FieldsStore.js -> Field.js -> FieldFeedback.js -> FieldFeedbackWhenValid.js\n// FieldFeedbacks.js -> FormWithConstraints.js -> FieldsStore.js -> Field.js -> FieldFeedback.js -> FieldFeedbacks.js\n// FieldsStore.js -> Field.js -> FieldFeedback.js -> FormWithConstraints.js -> FieldsStore.js\n// FormWithConstraints.js -> FieldsStore.js -> Field.js -> FieldFeedback.js -> FormWithConstraints.js\n//\n// Detected thanks to https://github.com/aackerman/circular-dependency-plugin\n//\n// This caused an error with PropTypes:\n// `Warning: Failed context type: Right-hand side of 'instanceof' is not an object`\n// with `form: PropTypes.instanceOf(FormWithConstraints).isRequired` inside FieldFeedbacks\nexport enum FieldFeedbackType {\n  Error = 'error',\n  Warning = 'warning',\n  Info = 'info',\n  WhenValid = 'whenValid'\n}\n","import { clearArray } from './clearArray';\nimport { FieldFeedbackType } from './FieldFeedbackType';\nimport { FieldFeedbackValidation } from './FieldFeedbackValidation';\nimport { HTMLInput, TextInput } from './InputElement';\n\n// Field is a better name than Input, [Django Form fields](https://docs.djangoproject.com/en/1.11/ref/forms/fields/)\nexport class Field {\n  public readonly validations: FieldFeedbackValidation[] = [];\n\n  // Can be useful for the user to get the DOM element\n  // https://github.com/tkrotoff/react-form-with-constraints/issues/41\n  //\n  // Populated by FormWithConstraints.validateField()\n  //\n  // Cannot be set as readonly :/\n  public element?: HTMLInput | TextInput;\n\n  constructor(public readonly name: string) {}\n\n  addOrReplaceValidation(validation: FieldFeedbackValidation) {\n    // [Update if exists or add new element to array of objects](https://stackoverflow.com/a/49375465/990356)\n    const i = this.validations.findIndex(_validation => _validation.key === validation.key);\n    if (i > -1) this.validations[i] = validation;\n    else this.validations.push(validation);\n  }\n\n  clearValidations() {\n    clearArray(this.validations);\n  }\n\n  hasFeedbacksOfType(type: FieldFeedbackType, fieldFeedbacksKey?: string) {\n    return this.validations.some(\n      fieldFeedback =>\n        (fieldFeedbacksKey === undefined ||\n          fieldFeedback.key.startsWith(`${fieldFeedbacksKey}.`)) &&\n        fieldFeedback.type === type &&\n        fieldFeedback.show === true\n    );\n  }\n\n  hasErrors(fieldFeedbacksKey?: string) {\n    return this.hasFeedbacksOfType(FieldFeedbackType.Error, fieldFeedbacksKey);\n  }\n\n  hasWarnings(fieldFeedbacksKey?: string) {\n    return this.hasFeedbacksOfType(FieldFeedbackType.Warning, fieldFeedbacksKey);\n  }\n\n  hasInfos(fieldFeedbacksKey?: string) {\n    return this.hasFeedbacksOfType(FieldFeedbackType.Info, fieldFeedbacksKey);\n  }\n\n  hasFeedbacks(fieldFeedbacksKey?: string) {\n    return (\n      this.hasErrors(fieldFeedbacksKey) ||\n      this.hasWarnings(fieldFeedbacksKey) ||\n      this.hasInfos(fieldFeedbacksKey)\n    );\n  }\n\n  isValid() {\n    return !this.hasErrors();\n  }\n}\n","import { assert } from './assert';\nimport { EventEmitter } from './EventEmitter';\nimport { Field } from './Field';\n\nexport enum FieldEvent {\n  Added = 'FIELD_ADDED',\n  Removed = 'FIELD_REMOVED'\n}\n\nexport class FieldsStore extends EventEmitter<[Field | string], void> {\n  readonly fields = new Array<Field>();\n\n  getField(fieldName: string) {\n    const fields = this.fields.filter(_field => _field.name === fieldName);\n    //assert(fields.length === 1, `Unknown field '${fieldName}'`);\n    return fields.length === 1 ? fields[0] : undefined;\n  }\n\n  addField(fieldName: string) {\n    const fields = this.fields.filter(_field => _field.name === fieldName);\n    assert(\n      fields.length === 0 || fields.length === 1,\n      `Cannot have more than 1 field matching '${fieldName}'`\n    );\n\n    if (fields.length === 0) {\n      const newField = new Field(fieldName);\n      this.fields.push(newField);\n      this.emitSync(FieldEvent.Added, newField);\n    } else {\n      // We can have multiple FieldFeedbacks for the same field,\n      // thus addField() can be called multiple times\n    }\n  }\n\n  removeField(fieldName: string) {\n    // eslint-disable-next-line unicorn/prefer-array-find\n    const fields = this.fields.filter(_field => _field.name === fieldName);\n\n    // We can have multiple FieldFeedbacks for the same field,\n    // thus removeField() can be called multiple times\n    //assert(fields.length === 1, `Unknown field '${fieldName}'`);\n\n    const index = this.fields.indexOf(fields[0]);\n    if (index > -1) {\n      this.fields.splice(index, 1);\n      this.emitSync(FieldEvent.Removed, fieldName);\n    }\n  }\n\n  isValid() {\n    return this.fields.every(field => field.isValid());\n  }\n\n  hasFeedbacks() {\n    return this.fields.some(field => field.hasFeedbacks());\n  }\n}\n","// [React Native TextInput](https://facebook.github.io/react-native/docs/textinput.html)\n// Here so we don't have to \"import { TextInput } from 'react-native'\" and depend on React Native\nexport interface TextInput {\n  //value?: string; // Always undefined, use instead props.value\n  props: {\n    name: string;\n    value?: string;\n  };\n}\n\n// Cannot clone ValidityState using JSON.parse(JSON.stringify(input.validity)),\n// results in an empty object ({}) under Chrome 66, Firefox 60 and Safari 10.1.2\n// so let's manually clone it.\nexport class IValidityState implements ValidityState {\n  readonly badInput: boolean;\n  readonly customError: boolean;\n  readonly patternMismatch: boolean;\n  readonly rangeOverflow: boolean;\n  readonly rangeUnderflow: boolean;\n  readonly stepMismatch: boolean;\n  readonly tooLong: boolean;\n  readonly tooShort: boolean;\n  readonly typeMismatch: boolean;\n  readonly valid: boolean;\n  readonly valueMissing: boolean;\n\n  constructor(validity: ValidityState) {\n    this.badInput = validity.badInput;\n    this.customError = validity.customError;\n    this.patternMismatch = validity.patternMismatch;\n    this.rangeOverflow = validity.rangeOverflow;\n    this.rangeUnderflow = validity.rangeUnderflow;\n    this.stepMismatch = validity.stepMismatch;\n    this.tooLong = validity.tooLong;\n    this.tooShort = validity.tooShort;\n    this.typeMismatch = validity.typeMismatch;\n    this.valid = validity.valid;\n    this.valueMissing = validity.valueMissing;\n  }\n}\n\n// Type for Field.element\nexport type HTMLInput = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n\n// Minimum interface accepted by validateFields() and friends\nexport interface IHTMLInput {\n  readonly name: string;\n  readonly type: string; // Not needed internally, can be text, radio...\n  readonly value: string;\n\n  // validity and validationMessage available for (lib.dom.d.ts):\n  // HTMLButtonElement, HTMLFieldSetElement, HTMLInputElement, HTMLObjectElement,\n  // HTMLOutputElement, HTMLSelectElement, HTMLTextAreaElement\n  // ValidityState is supported by IE >= 10\n  readonly validity: IValidityState;\n  readonly validationMessage: string;\n}\n\nexport function isHTMLInput(input: IHTMLInput | TextInput): input is IHTMLInput {\n  return (input as any).props === undefined;\n}\n\n// Need to duplicate the input when the user changes rapidly the input\n// otherwise we will treat only the last input value instead of every input value change\n// Cannot be named Field or Input: already taken\nexport class InputElement implements IHTMLInput {\n  readonly name: string;\n  readonly type: string;\n  readonly value: string;\n  readonly validity: IValidityState;\n  readonly validationMessage: string;\n\n  constructor(input: IHTMLInput | TextInput) {\n    if (isHTMLInput(input)) {\n      this.name = input.name;\n      this.type = input.type;\n      this.value = input.value;\n\n      // Solution 1: no clone, then .mock.calls never ends with ValidityState inside FormWithConstraints.test.tsx in v0.8\n      //this.validity = input.validity;\n\n      // Solution 2: JSON does not work to clone ValidityState (results in an empty object)\n      //this.validity = JSON.parse(JSON.stringify(input.validity));\n\n      // Solution 3: manually clone ValidityState\n      this.validity = new IValidityState(input.validity as ValidityState);\n\n      this.validationMessage = input.validationMessage;\n    } else {\n      this.name = input.props.name;\n      this.type = undefined as any;\n      this.value = input.props.value!; // Tested: TextInput props.value is always a string and never undefined (empty string instead)\n      this.validity = undefined as any;\n      this.validationMessage = undefined as any;\n    }\n  }\n}\n","// [\"TypeScript static analysis is unable to track this behavior\"](https://codereview.stackexchange.com/a/138289/148847)\n// [TypeScript filter out nulls from an array](https://stackoverflow.com/q/43118692)\nexport function notUndefined<T>(value: T | undefined): value is T {\n  return value !== undefined;\n}\n","import { Constructor } from './Constructor';\nimport { EventEmitter } from './EventEmitter';\nimport { Field } from './Field';\n\nexport const FieldDidResetEvent = 'FIELD_DID_RESET_EVENT';\n\n// [TypeScript 2.2 Support for Mix-in classes](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html)\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function withFieldDidResetEventEmitter<TBase extends Constructor<{}>>(Base: TBase) {\n  type ListenerArg = Field;\n  type ListenerReturnType = void;\n  type Listener = (field: ListenerArg) => ListenerReturnType;\n\n  return class ResetFieldEvenEmitter extends Base {\n    fieldDidResetEventEmitter = new EventEmitter<[ListenerArg], ListenerReturnType>();\n\n    emitFieldDidResetEvent(field: Field) {\n      return this.fieldDidResetEventEmitter.emitSync(FieldDidResetEvent, field);\n    }\n\n    addFieldDidResetEventListener(listener: Listener) {\n      this.fieldDidResetEventEmitter.addListener(FieldDidResetEvent, listener);\n    }\n\n    removeFieldDidResetEventListener(listener: Listener) {\n      this.fieldDidResetEventEmitter.removeListener(FieldDidResetEvent, listener);\n    }\n  };\n}\n","import { Constructor } from './Constructor';\nimport { EventEmitter } from './EventEmitter';\nimport { Field } from './Field';\n\nexport const FieldDidValidateEvent = 'FIELD_DID_VALIDATE_EVENT';\n\n// [TypeScript 2.2 Support for Mix-in classes](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html)\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function withFieldDidValidateEventEmitter<TBase extends Constructor<{}>>(Base: TBase) {\n  type ListenerArg = Field;\n  type ListenerReturnType = void;\n  type Listener = (field: ListenerArg) => ListenerReturnType;\n\n  return class FieldDidValidateEventEmitter extends Base {\n    fieldDidValidateEventEmitter = new EventEmitter<[ListenerArg], ListenerReturnType>();\n\n    emitFieldDidValidateEvent(field: Field) {\n      return this.fieldDidValidateEventEmitter.emitSync(FieldDidValidateEvent, field);\n    }\n\n    addFieldDidValidateEventListener(listener: Listener) {\n      this.fieldDidValidateEventEmitter.addListener(FieldDidValidateEvent, listener);\n    }\n\n    removeFieldDidValidateEventListener(listener: Listener) {\n      this.fieldDidValidateEventEmitter.removeListener(FieldDidValidateEvent, listener);\n    }\n  };\n}\n","import { Constructor } from './Constructor';\nimport { EventEmitter } from './EventEmitter';\n\nexport const FieldWillValidateEvent = 'FIELD_WILL_VALIDATE_EVENT';\n\n// [TypeScript 2.2 Support for Mix-in classes](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html)\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function withFieldWillValidateEventEmitter<TBase extends Constructor<{}>>(Base: TBase) {\n  type ListenerArg = string;\n  type ListenerReturnType = void;\n  type Listener = (fieldName: ListenerArg) => ListenerReturnType;\n\n  return class FieldWillValidateEventEmitter extends Base {\n    fieldWillValidateEventEmitter = new EventEmitter<[ListenerArg], ListenerReturnType>();\n\n    emitFieldWillValidateEvent(fieldName: string) {\n      return this.fieldWillValidateEventEmitter.emitSync(FieldWillValidateEvent, fieldName);\n    }\n\n    addFieldWillValidateEventListener(listener: Listener) {\n      this.fieldWillValidateEventEmitter.addListener(FieldWillValidateEvent, listener);\n    }\n\n    removeFieldWillValidateEventListener(listener: Listener) {\n      this.fieldWillValidateEventEmitter.removeListener(FieldWillValidateEvent, listener);\n    }\n  };\n}\n","import { Constructor } from './Constructor';\nimport { EventEmitter } from './EventEmitter';\nimport { InputElement } from './InputElement';\n\nexport const ValidateFieldEvent = 'VALIDATE_FIELD_EVENT';\n\n// [TypeScript 2.2 Support for Mix-in classes](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html)\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function withValidateFieldEventEmitter<ListenerReturnType, TBase extends Constructor<{}>>(\n  Base: TBase\n) {\n  type ListenerArg = InputElement;\n  type Listener = (input: ListenerArg) => ListenerReturnType | Promise<ListenerReturnType>;\n\n  return class ValidateFieldEventEmitter extends Base {\n    validateFieldEventEmitter = new EventEmitter<[ListenerArg], ListenerReturnType>();\n\n    emitValidateFieldEvent(input: InputElement) {\n      return this.validateFieldEventEmitter.emitAsync(ValidateFieldEvent, input);\n    }\n\n    addValidateFieldEventListener(listener: Listener) {\n      this.validateFieldEventEmitter.addListener(ValidateFieldEvent, listener);\n    }\n\n    removeValidateFieldEventListener(listener: Listener) {\n      this.validateFieldEventEmitter.removeListener(ValidateFieldEvent, listener);\n    }\n  };\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { assert } from './assert';\nimport { Field } from './Field';\nimport { FieldFeedbackValidation } from './FieldFeedbackValidation';\nimport { FieldsStore } from './FieldsStore';\nimport { HTMLInput, IHTMLInput, InputElement, TextInput } from './InputElement';\nimport { notUndefined } from './notUndefined';\nimport { withFieldDidResetEventEmitter } from './withFieldDidResetEventEmitter';\nimport { withFieldDidValidateEventEmitter } from './withFieldDidValidateEventEmitter';\nimport { withFieldWillValidateEventEmitter } from './withFieldWillValidateEventEmitter';\nimport { withValidateFieldEventEmitter } from './withValidateFieldEventEmitter';\n\nexport interface FormWithConstraintsChildContext {\n  form: FormWithConstraints;\n}\n\nexport interface FormWithConstraintsProps extends React.FormHTMLAttributes<HTMLFormElement> {}\n\nclass FormWithConstraintsComponent extends React.PureComponent<FormWithConstraintsProps> {}\nexport class FormWithConstraints\n  extends withFieldDidResetEventEmitter(\n    withFieldWillValidateEventEmitter(\n      withFieldDidValidateEventEmitter(\n        withValidateFieldEventEmitter<\n          // FieldFeedback returns FieldFeedbackValidation\n          // Async returns FieldFeedbackValidation[] | undefined\n          // FieldFeedbacks returns (FieldFeedbackValidation | undefined)[] | undefined\n          FieldFeedbackValidation | (FieldFeedbackValidation | undefined)[] | undefined,\n          typeof FormWithConstraintsComponent\n        >(FormWithConstraintsComponent)\n      )\n    )\n  )\n  implements React.ChildContextProvider<FormWithConstraintsChildContext> {\n  static childContextTypes: React.ValidationMap<FormWithConstraintsChildContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired\n  };\n  getChildContext(): FormWithConstraintsChildContext {\n    return {\n      form: this\n    };\n  }\n\n  // Could be named innerRef instead, https://github.com/ant-design/ant-design/issues/5489#issuecomment-332208652\n  private form: HTMLFormElement | null = null;\n\n  fieldsStore = new FieldsStore();\n\n  private fieldFeedbacksKeyCounter = 0;\n  computeFieldFeedbacksKey() {\n    return `${this.fieldFeedbacksKeyCounter++}`;\n  }\n\n  /**\n   * Validates the given fields, either HTMLInputElements or field names.\n   * If called without arguments, validates all fields ($('[name]')).\n   */\n  validateFields(...inputsOrNames: Array<IHTMLInput | string>) {\n    return this._validateFields(/* forceValidateFields */ true, ...inputsOrNames);\n  }\n\n  // TODO To be removed in the future?\n  validateForm() {\n    return this.validateFieldsWithoutFeedback();\n  }\n\n  /**\n   * Validates fields without feedback only.\n   */\n  validateFieldsWithoutFeedback(...inputsOrNames: Array<IHTMLInput | string>) {\n    return this._validateFields(/* forceValidateFields */ false, ...inputsOrNames);\n  }\n\n  private async _validateFields(\n    forceValidateFields: boolean,\n    ...inputsOrNames: Array<IHTMLInput | string>\n  ) {\n    const fields = new Array<Readonly<Field>>();\n\n    const inputs = this.normalizeInputs(...inputsOrNames);\n\n    for (let i = 0; i < inputs.length; i++) {\n      const input = inputs[i];\n      // eslint-disable-next-line no-await-in-loop\n      const field = await this.validateField(\n        forceValidateFields,\n        new InputElement(input),\n        input as HTMLInput | TextInput\n      );\n      if (field !== undefined) fields.push(field);\n    }\n\n    return fields;\n  }\n\n  private async validateField(\n    forceValidateFields: boolean,\n    input: InputElement,\n\n    // We need to pass the native input separately instead of it being a property of InputElement\n    // otherwise react-form-with-constraints-native unit tests will crash\n    nativeInput: HTMLInput | TextInput\n  ) {\n    const fieldName = input.name;\n    const field = this.fieldsStore.getField(fieldName);\n\n    if (field === undefined) {\n      // Means the field (<input name=\"username\">) does not have a FieldFeedbacks\n      // so let's ignore this field\n    } else if (forceValidateFields || !field.hasFeedbacks()) {\n      field.element = nativeInput as HTMLInput | TextInput;\n      field.clearValidations();\n\n      this.emitFieldWillValidateEvent(fieldName);\n\n      const arrayOfArrays = await this.emitValidateFieldEvent(input);\n\n      // Internal check that everything is OK\n      // Can be temporary out of sync if the user rapidly change the input, in this case:\n      // emitFieldWillValidateEvent() returns the result of the first change while the store already contains the final validations\n      assert(\n        JSON.stringify(\n          (arrayOfArrays.flat(Infinity) as (\n            | FieldFeedbackValidation\n            | undefined\n          )[]).filter(fieldFeedback => notUndefined(fieldFeedback))\n        ) /* validationsFromEmitValidateFieldEvent */ ===\n          JSON.stringify(field.validations) /* validationsFromStore */,\n        `FieldsStore does not match emitValidateFieldEvent() result, did the user changed the input rapidly?`\n      );\n\n      this.emitFieldDidValidateEvent(field);\n    }\n\n    return field;\n  }\n\n  // If called without arguments, returns all fields ($('[name]'))\n  // Returns the inputs in the same order they were given\n  protected normalizeInputs(...inputsOrNames: Array<IHTMLInput | string>) {\n    let inputs;\n\n    if (inputsOrNames.length === 0) {\n      // [name] matches <input name=\"...\">, <select name=\"...\">, <button name=\"...\">, ...\n      // [Convert JavaScript NodeList to Array?](https://stackoverflow.com/a/33822526/990356)\n      // [...NodeList] vs Array.from(NodeList): the latter doesn't need downlevelIteration with IE\n      // eslint-disable-next-line unicorn/prefer-spread\n      inputs = Array.from(this.form!.querySelectorAll<HTMLInputElement>('[name]'));\n\n      // Remove elements without ValidityState, example:\n      // <iframe src=\"https://www.google.com/recaptcha...\" name=\"a-49ekipqfmwsv\">\n      // Without this check, possible crash inside InputElement is \"TypeError: Cannot read property 'badInput' of undefined\"\n      //\n      // ValidityState is available for (lib.dom.d.ts):\n      // HTMLButtonElement, HTMLFieldSetElement, HTMLInputElement, HTMLObjectElement,\n      // HTMLOutputElement, HTMLSelectElement, HTMLTextAreaElement\n      //\n      // ValidityState is supported by IE >= 10\n      inputs = inputs.filter(input => input.validity !== undefined);\n\n      // Check we have unique names\n      inputs\n        .filter(input => input.type !== 'checkbox' && input.type !== 'radio')\n        .map(input => input.name)\n        .forEach((name, index, self) => {\n          if (self.indexOf(name) !== index) {\n            throw new Error(`Multiple elements matching '[name=\"${name}\"]' inside the form`);\n          }\n        });\n    } else {\n      inputs = inputsOrNames.map(input => {\n        if (typeof input === 'string') {\n          const query = `[name=\"${input}\"]`;\n\n          // [...NodeList] vs Array.from(NodeList): the latter doesn't need downlevelIteration with IE\n          // eslint-disable-next-line unicorn/prefer-spread\n          const elements = Array.from(this.form!.querySelectorAll<HTMLInputElement>(query));\n\n          // Checks\n\n          if (elements.filter(el => el.validity === undefined).length > 0) {\n            // Should not match something like\n            // <iframe src=\"https://www.google.com/recaptcha...\" name=\"a-49ekipqfmwsv\">\n            throw new Error(`'${query}' should match an <input>, <select> or <textarea>`);\n          }\n          if (elements.filter(el => el.type !== 'checkbox' && el.type !== 'radio').length > 1) {\n            throw new Error(`Multiple elements matching '${query}' inside the form`);\n          }\n          const element = elements[0];\n          if (element === undefined) {\n            throw new Error(`Could not find field '${query}' inside the form`);\n          }\n\n          return element;\n        }\n\n        return input;\n      });\n    }\n\n    return inputs;\n  }\n\n  // More like seemsToBeValid(): return true if fields are untouched\n  isValid() {\n    return this.fieldsStore.isValid();\n  }\n\n  hasFeedbacks() {\n    return this.fieldsStore.hasFeedbacks();\n  }\n\n  // TODO To be removed in the future?\n  reset() {\n    return this.resetFields();\n  }\n\n  resetFields(...inputsOrNames: Array<IHTMLInput | string>) {\n    const fields = new Array<Readonly<Field>>();\n\n    const inputs = this.normalizeInputs(...inputsOrNames);\n    inputs.forEach(input => {\n      const field = this.resetField(new InputElement(input));\n      if (field !== undefined) fields.push(field);\n    });\n\n    return fields;\n  }\n\n  private resetField(input: InputElement) {\n    const fieldName = input.name;\n    const field = this.fieldsStore.getField(fieldName);\n\n    if (field === undefined) {\n      // Means the field (<input name=\"username\">) does not have a FieldFeedbacks\n      // so let's ignore this field\n    } else {\n      field.clearValidations();\n      this.emitFieldDidResetEvent(field);\n    }\n\n    return field;\n  }\n\n  render() {\n    return <form ref={form => (this.form = form)} {...this.props} />;\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { FieldFeedbackValidation } from './FieldFeedbackValidation';\nimport { FormWithConstraints, FormWithConstraintsChildContext } from './FormWithConstraints';\nimport { InputElement } from './InputElement';\nimport { Nullable } from './Nullable';\nimport { withValidateFieldEventEmitter } from './withValidateFieldEventEmitter';\n\nexport interface FieldFeedbacksProps {\n  for?: string;\n\n  /**\n   * first-* => stops on the first * encountered\n   * no => shows everything\n   * Default is 'first-error'\n   */\n  stop: 'first' | 'first-error' | 'first-warning' | 'first-info' | 'no';\n}\n\n// Why Nullable? https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27973\nexport type FieldFeedbacksContext = FormWithConstraintsChildContext &\n  Partial<Nullable<FieldFeedbacksChildContext>>;\n\nexport interface FieldFeedbacksChildContext {\n  fieldFeedbacks: FieldFeedbacks;\n}\n\nclass FieldFeedbacksComponent extends React.PureComponent<FieldFeedbacksProps> {}\nexport class FieldFeedbacks\n  extends withValidateFieldEventEmitter<\n    // FieldFeedback returns FieldFeedbackValidation\n    // Async returns FieldFeedbackValidation[] | undefined\n    // FieldFeedbacks returns (FieldFeedbackValidation | undefined)[]\n    FieldFeedbackValidation | (FieldFeedbackValidation | undefined)[] | undefined,\n    typeof FieldFeedbacksComponent\n  >(FieldFeedbacksComponent)\n  implements React.ChildContextProvider<FieldFeedbacksChildContext> {\n  static defaultProps: FieldFeedbacksProps = {\n    stop: 'first-error'\n  };\n\n  static contextTypes: React.ValidationMap<FieldFeedbacksContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired,\n    fieldFeedbacks: PropTypes.instanceOf(FieldFeedbacks)\n  };\n  context!: FieldFeedbacksContext;\n\n  static childContextTypes: React.ValidationMap<FieldFeedbacksChildContext> = {\n    fieldFeedbacks: PropTypes.instanceOf(FieldFeedbacks).isRequired\n  };\n  getChildContext(): FieldFeedbacksChildContext {\n    return {\n      fieldFeedbacks: this\n    };\n  }\n\n  // Tested: there is no conflict with React key prop (https://reactjs.org/docs/lists-and-keys.html)\n  readonly key: string; // '0', '1', '2'...\n\n  readonly fieldName: string; // Instead of reading props each time\n\n  constructor(props: FieldFeedbacksProps, context: FieldFeedbacksContext) {\n    super(props, context);\n\n    const { form, fieldFeedbacks: fieldFeedbacksParent } = context;\n\n    this.key = fieldFeedbacksParent\n      ? fieldFeedbacksParent.computeFieldFeedbackKey()\n      : form.computeFieldFeedbacksKey();\n\n    if (fieldFeedbacksParent) {\n      this.fieldName = fieldFeedbacksParent.fieldName;\n      if (props.for !== undefined) {\n        throw new Error(\"FieldFeedbacks cannot have a parent and a 'for' prop\");\n      }\n    } else {\n      if (props.for === undefined) {\n        throw new Error(\"FieldFeedbacks cannot be without parent and without 'for' prop\");\n      } else {\n        this.fieldName = props.for;\n      }\n    }\n  }\n\n  private fieldFeedbackKeyCounter = 0;\n  computeFieldFeedbackKey() {\n    return `${this.key}.${this.fieldFeedbackKeyCounter++}`;\n  }\n\n  addFieldFeedback() {\n    return this.computeFieldFeedbackKey();\n  }\n\n  componentDidMount() {\n    const { form, fieldFeedbacks: fieldFeedbacksParent } = this.context;\n\n    form.fieldsStore.addField(this.fieldName);\n\n    const parent = fieldFeedbacksParent || form;\n    parent.addValidateFieldEventListener(this.validate);\n  }\n\n  componentWillUnmount() {\n    const { form, fieldFeedbacks: fieldFeedbacksParent } = this.context;\n\n    form.fieldsStore.removeField(this.fieldName);\n\n    const parent = fieldFeedbacksParent || form;\n    parent.removeValidateFieldEventListener(this.validate);\n  }\n\n  validate = async (input: InputElement) => {\n    const { form, fieldFeedbacks: fieldFeedbacksParent } = this.context;\n\n    let validations;\n\n    // Ignore the event if it's not for us\n    if (input.name === this.fieldName) {\n      const field = form.fieldsStore.getField(this.fieldName)!;\n\n      // prettier-ignore\n      if (fieldFeedbacksParent && (\n          fieldFeedbacksParent.props.stop === 'first' && field.hasFeedbacks(fieldFeedbacksParent.key) ||\n          fieldFeedbacksParent.props.stop === 'first-error' && field.hasErrors(fieldFeedbacksParent.key) ||\n          fieldFeedbacksParent.props.stop === 'first-warning' && field.hasWarnings(fieldFeedbacksParent.key) ||\n          fieldFeedbacksParent.props.stop === 'first-info' && field.hasInfos(fieldFeedbacksParent.key))) {\n        // Do nothing\n      } else {\n        validations = await this._validate(input);\n      }\n    }\n\n    return validations;\n  };\n\n  async _validate(input: InputElement) {\n    const arrayOfArrays = await this.emitValidateFieldEvent(input);\n    const validations = arrayOfArrays.flat(Infinity) as (FieldFeedbackValidation | undefined)[];\n    return validations;\n  }\n\n  render() {\n    const { children } = this.props;\n    // https://codepen.io/tkrotoff/pen/yzKKdB\n    return children !== undefined ? children : null;\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { assert } from './assert';\nimport { FieldFeedbacks, FieldFeedbacksChildContext } from './FieldFeedbacks';\nimport { FieldFeedbackValidation } from './FieldFeedbackValidation';\nimport { FormWithConstraints, FormWithConstraintsChildContext } from './FormWithConstraints';\nimport { InputElement } from './InputElement';\nimport { withValidateFieldEventEmitter } from './withValidateFieldEventEmitter';\n\nexport enum Status {\n  None,\n  Pending,\n  Rejected,\n  Resolved\n}\n\nexport interface AsyncProps<T> {\n  promise: (value: string) => Promise<T>;\n  pending?: React.ReactNode;\n  then?: (value: T) => React.ReactNode;\n  catch?: (reason: any) => React.ReactNode;\n}\n\ninterface AsyncState<T> {\n  status: Status;\n  value?: T;\n}\n\nexport interface AsyncChildContext {\n  async: Async<any>;\n}\n\nexport type AsyncContext = FormWithConstraintsChildContext & FieldFeedbacksChildContext;\n\n// [Asynchronous form errors and messages in AngularJS](https://jaysoo.ca/2014/10/14/async-form-errors-and-messages-in-angularjs/)\n// [Support for asynchronous values (like Promises and Observables)](https://github.com/facebook/react/issues/6481)\n// https://github.com/capaj/react-promise\n// [How to render promises in React](https://gist.github.com/hex13/6d46f8b54631871ea8bf87576b635c49)\n// Cannot be inside a separated npm package since FieldFeedback needs to attach itself to Async\nclass AsyncComponent<T = any> extends React.PureComponent<AsyncProps<T>, AsyncState<T>> {}\nexport class Async<T>\n  extends withValidateFieldEventEmitter<\n    // FieldFeedback returns FieldFeedbackValidation\n    FieldFeedbackValidation,\n    typeof AsyncComponent\n  >(AsyncComponent)\n  implements React.ChildContextProvider<AsyncChildContext> {\n  static contextTypes: React.ValidationMap<AsyncContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired,\n    fieldFeedbacks: PropTypes.instanceOf(FieldFeedbacks).isRequired\n  };\n  context!: AsyncContext;\n\n  static childContextTypes: React.ValidationMap<AsyncChildContext> = {\n    async: PropTypes.instanceOf(Async).isRequired\n  };\n  getChildContext(): AsyncChildContext {\n    return {\n      async: this\n    };\n  }\n\n  state: AsyncState<T> = {\n    status: Status.None\n  };\n\n  componentDidMount() {\n    this.context.fieldFeedbacks.addValidateFieldEventListener(this.validate);\n  }\n\n  componentWillUnmount() {\n    this.context.fieldFeedbacks.removeValidateFieldEventListener(this.validate);\n  }\n\n  validate = (input: InputElement) => {\n    const { form, fieldFeedbacks } = this.context;\n\n    let validations;\n\n    const field = form.fieldsStore.getField(input.name)!;\n\n    if (\n      (fieldFeedbacks.props.stop === 'first' && field.hasFeedbacks(fieldFeedbacks.key)) ||\n      (fieldFeedbacks.props.stop === 'first-error' && field.hasErrors(fieldFeedbacks.key)) ||\n      (fieldFeedbacks.props.stop === 'first-warning' && field.hasWarnings(fieldFeedbacks.key)) ||\n      (fieldFeedbacks.props.stop === 'first-info' && field.hasInfos(fieldFeedbacks.key))\n    ) {\n      // Reset UI\n      this.setState({ status: Status.None });\n    } else {\n      validations = this._validate(input);\n    }\n\n    return validations;\n  };\n\n  async _validate(input: InputElement) {\n    this.setState({ status: Status.Pending });\n    try {\n      const value = await this.props.promise(input.value);\n      this.setState({ status: Status.Resolved, value });\n    } catch (e) {\n      this.setState({ status: Status.Rejected, value: e });\n    }\n\n    return this.emitValidateFieldEvent(input);\n  }\n\n  render() {\n    const { props, state } = this;\n    let element = null;\n\n    switch (state.status) {\n      case Status.None:\n        break;\n      case Status.Pending:\n        if (props.pending) element = props.pending;\n        break;\n      case Status.Resolved:\n        if (props.then) element = props.then(state.value);\n        break;\n      case Status.Rejected:\n        if (props.catch) element = props.catch(state.value);\n        break;\n      default:\n        assert(false, `Unknown status: '${state.status}'`);\n    }\n\n    return element;\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Field } from './Field';\nimport { FieldFeedbackClasses } from './FieldFeedback';\nimport { FieldFeedbacks, FieldFeedbacksChildContext } from './FieldFeedbacks';\nimport { FormWithConstraints, FormWithConstraintsChildContext } from './FormWithConstraints';\n\nexport interface FieldFeedbackWhenValidBaseProps {}\n\nexport interface FieldFeedbackWhenValidProps\n  extends FieldFeedbackWhenValidBaseProps,\n    FieldFeedbackClasses,\n    React.HTMLAttributes<HTMLSpanElement> {}\n\ninterface FieldFeedbackWhenValidState {\n  fieldIsValid: boolean | undefined;\n}\n\nexport type FieldFeedbackWhenValidContext = FormWithConstraintsChildContext &\n  FieldFeedbacksChildContext;\n\nexport class FieldFeedbackWhenValid<\n  Props extends FieldFeedbackWhenValidBaseProps = FieldFeedbackWhenValidProps\n> extends React.Component<Props, FieldFeedbackWhenValidState> {\n  static contextTypes: React.ValidationMap<FieldFeedbackWhenValidContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired,\n    fieldFeedbacks: PropTypes.instanceOf(FieldFeedbacks).isRequired\n  };\n  context!: FieldFeedbackWhenValidContext;\n\n  state: FieldFeedbackWhenValidState = {\n    fieldIsValid: undefined\n  };\n\n  /* eslint-disable react/destructuring-assignment */\n\n  componentDidMount() {\n    this.context.form.addFieldWillValidateEventListener(this.fieldWillValidate);\n    this.context.form.addFieldDidValidateEventListener(this.fieldDidValidate);\n    this.context.form.addFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  componentWillUnmount() {\n    this.context.form.removeFieldWillValidateEventListener(this.fieldWillValidate);\n    this.context.form.removeFieldDidValidateEventListener(this.fieldDidValidate);\n    this.context.form.removeFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  fieldWillValidate = (fieldName: string) => {\n    // Ignore the event if it's not for us\n    if (fieldName === this.context.fieldFeedbacks.fieldName) {\n      this.setState({ fieldIsValid: undefined });\n    }\n  };\n\n  fieldDidValidate = (field: Field) => {\n    // Ignore the event if it's not for us\n    if (field.name === this.context.fieldFeedbacks.fieldName) {\n      this.setState({ fieldIsValid: field.isValid() });\n    }\n  };\n\n  fieldDidReset = (field: Field) => {\n    // Ignore the event if it's not for us\n    if (field.name === this.context.fieldFeedbacks.fieldName) {\n      this.setState({ fieldIsValid: undefined });\n    }\n  };\n\n  // Don't forget to update native/FieldFeedbackWhenValid.render()\n  render() {\n    const { style, ...otherProps } = (this.props as unknown) as FieldFeedbackWhenValidProps;\n\n    return this.state.fieldIsValid ? (\n      // <span style=\"display: block\"> instead of <div> so FieldFeedbackWhenValid can be wrapped inside a <p>\n      // otherProps before className because otherProps contains data-feedback\n      <span {...otherProps} style={{ display: 'block', ...style }} />\n    ) : null;\n  }\n\n  /* eslint-enable react/destructuring-assignment */\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Async, AsyncChildContext } from './Async';\nimport { Field } from './Field';\nimport { FieldFeedbacks, FieldFeedbacksChildContext } from './FieldFeedbacks';\nimport { FieldFeedbackType } from './FieldFeedbackType';\nimport { FieldFeedbackValidation } from './FieldFeedbackValidation';\nimport { FieldFeedbackWhenValid } from './FieldFeedbackWhenValid';\nimport { FormWithConstraints, FormWithConstraintsChildContext } from './FormWithConstraints';\nimport { InputElement } from './InputElement';\nimport { Nullable } from './Nullable';\n\ntype WhenString =\n  | 'valid'\n  | '*'\n  | 'badInput' // input type=\"number\"\n  | 'patternMismatch' // pattern attribute\n  | 'rangeOverflow' // max attribute\n  | 'rangeUnderflow' // min attribute\n  | 'stepMismatch' // step attribute\n  | 'tooLong' // maxlength attribute\n  | 'tooShort' // minlength attribute\n  | 'typeMismatch' // input type=\"email\" or input type=\"url\"\n  | 'valueMissing'; // required attribute\ntype WhenFn = (value: string) => boolean;\ntype When = WhenString | WhenFn;\n\nexport interface FieldFeedbackClasses {\n  classes?: {\n    // FIXME Should not be declared \"?\" thanks to defaultProps?\n    [index: string]: string | undefined;\n    error?: string;\n    warning?: string;\n    info?: string;\n    whenValid?: string;\n  };\n}\n\nexport interface FieldFeedbackBaseProps {\n  when?: When; // FIXME Should not be declared \"?\" thanks to defaultProps?\n  error?: boolean;\n  warning?: boolean;\n  info?: boolean;\n}\n\nexport interface FieldFeedbackProps\n  extends FieldFeedbackBaseProps,\n    FieldFeedbackClasses,\n    React.HTMLAttributes<HTMLSpanElement> {}\n\ninterface FieldFeedbackState {\n  validation: FieldFeedbackValidation;\n\n  // Copy of input.validationMessage\n  // https://developer.mozilla.org/en/docs/Web/API/HTMLInputElement\n  // https://www.w3.org/TR/html51/sec-forms.html#the-constraint-validation-api\n  validationMessage: string;\n}\n\n// Why Nullable? https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27973\nexport type FieldFeedbackContext = FormWithConstraintsChildContext &\n  FieldFeedbacksChildContext &\n  Partial<Nullable<AsyncChildContext>>;\n\nexport class FieldFeedback<\n  Props extends FieldFeedbackBaseProps = FieldFeedbackProps\n> extends React.Component<Props, FieldFeedbackState> {\n  static defaultProps: FieldFeedbackProps = {\n    when: () => true,\n    classes: {\n      error: 'error',\n      warning: 'warning',\n      info: 'info',\n      whenValid: 'when-valid'\n    }\n  };\n\n  static contextTypes: React.ValidationMap<FieldFeedbackContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired,\n    fieldFeedbacks: PropTypes.instanceOf(FieldFeedbacks).isRequired,\n    async: PropTypes.instanceOf(Async)\n  };\n  context!: FieldFeedbackContext;\n\n  // Tested: there is no conflict with React key prop (https://reactjs.org/docs/lists-and-keys.html)\n  readonly key: string; // '0.1', '1.0', '3.5'...\n\n  constructor(props: Props, context: FieldFeedbackContext) {\n    super(props, context);\n\n    this.key = context.fieldFeedbacks.addFieldFeedback();\n\n    const { error, warning, info, when } = props;\n\n    let type = FieldFeedbackType.Error; // Default is error\n    if (when === 'valid') type = FieldFeedbackType.WhenValid;\n    else if (warning) type = FieldFeedbackType.Warning;\n    else if (info) type = FieldFeedbackType.Info;\n\n    // Special case for when=\"valid\"\n    if (type === FieldFeedbackType.WhenValid && (error || warning || info)) {\n      throw new Error(\n        'Cannot have an attribute (error, warning...) with FieldFeedback when=\"valid\"'\n      );\n    }\n\n    // eslint-disable-next-line react/state-in-constructor\n    this.state = {\n      validation: {\n        key: this.key,\n        type,\n        show: undefined // undefined means the FieldFeedback was not checked\n      },\n      validationMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    const { form, fieldFeedbacks, async } = this.context;\n\n    if (async) async.addValidateFieldEventListener(this.validate);\n    else fieldFeedbacks.addValidateFieldEventListener(this.validate);\n\n    form.addFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  componentWillUnmount() {\n    const { form, fieldFeedbacks, async } = this.context;\n\n    if (async) async.removeValidateFieldEventListener(this.validate);\n    else fieldFeedbacks.removeValidateFieldEventListener(this.validate);\n\n    form.removeFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  validate = (input: InputElement) => {\n    const { when } = this.props;\n    const { form, fieldFeedbacks } = this.context;\n\n    const field = form.fieldsStore.getField(input.name)!;\n\n    // Copy state so we don't modify it directly (use of setState() instead)\n    // eslint-disable-next-line react/no-access-state-in-setstate, react/destructuring-assignment\n    const validation = { ...this.state.validation };\n\n    if (\n      (fieldFeedbacks.props.stop === 'first' && field.hasFeedbacks(fieldFeedbacks.key)) ||\n      (fieldFeedbacks.props.stop === 'first-error' && field.hasErrors(fieldFeedbacks.key)) ||\n      (fieldFeedbacks.props.stop === 'first-warning' && field.hasWarnings(fieldFeedbacks.key)) ||\n      (fieldFeedbacks.props.stop === 'first-info' && field.hasInfos(fieldFeedbacks.key))\n    ) {\n      // Do nothing\n      validation.show = undefined; // undefined means the FieldFeedback was not checked\n    } else {\n      validation.show = false;\n\n      if (typeof when === 'function') {\n        validation.show = when(input.value);\n      } else if (typeof when === 'string') {\n        if (when === 'valid') {\n          // undefined => special case for when=\"valid\": always displayed, then FieldFeedbackWhenValid decides what to do\n          validation.show = undefined;\n        } else {\n          const { validity } = input;\n\n          if (!validity.valid) {\n            if (when === '*') {\n              validation.show = true;\n            } else if (\n              (validity.badInput && when === 'badInput') ||\n              (validity.patternMismatch && when === 'patternMismatch') ||\n              (validity.rangeOverflow && when === 'rangeOverflow') ||\n              (validity.rangeUnderflow && when === 'rangeUnderflow') ||\n              (validity.stepMismatch && when === 'stepMismatch') ||\n              (validity.tooLong && when === 'tooLong') ||\n              (validity.tooShort && when === 'tooShort') ||\n              (validity.typeMismatch && when === 'typeMismatch') ||\n              (validity.valueMissing && when === 'valueMissing')\n            ) {\n              validation.show = true;\n            }\n          }\n        }\n      } else {\n        throw new TypeError(`Invalid FieldFeedback 'when' type: ${typeof when}`);\n      }\n    }\n\n    field.addOrReplaceValidation(validation);\n\n    this.setState({\n      validation,\n      validationMessage: input.validationMessage\n    });\n\n    return validation;\n  };\n\n  fieldDidReset = (field: Field) => {\n    // Ignore the event if it's not for us\n    // eslint-disable-next-line react/destructuring-assignment\n    if (field.name === this.context.fieldFeedbacks.fieldName) {\n      this.setState(prevState => ({\n        validation: { ...prevState.validation, ...{ show: undefined } },\n        validationMessage: ''\n      }));\n    }\n  };\n\n  // Don't forget to update native/FieldFeedback.render()\n  render() {\n    const { when, error, warning, info, className, classes, style, children, ...otherProps } = (this\n      .props as unknown) as FieldFeedbackProps;\n    const { validation, validationMessage } = this.state;\n\n    const fieldFeedbackClassName = classes![validation.type]!;\n    const classNames =\n      className !== undefined ? `${className} ${fieldFeedbackClassName}` : fieldFeedbackClassName;\n\n    // Special case for when=\"valid\": always displayed, then FieldFeedbackWhenValid decides what to do\n    if (validation.type === FieldFeedbackType.WhenValid) {\n      return (\n        <FieldFeedbackWhenValid\n          data-feedback={this.key}\n          style={style}\n          className={classNames}\n          {...otherProps}\n        >\n          {children}\n        </FieldFeedbackWhenValid>\n      );\n    }\n\n    if (validation.show) {\n      const feedback = children !== undefined ? children : validationMessage;\n\n      // <span style=\"display: block\"> instead of <div> so FieldFeedback can be wrapped inside a <p>\n      return (\n        <span\n          data-feedback={this.key}\n          className={classNames}\n          style={{ display: 'block', ...style }}\n          {...otherProps}\n        >\n          {feedback}\n        </span>\n      );\n    }\n\n    return null;\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Field } from './Field';\nimport { FormWithConstraints, FormWithConstraintsChildContext } from './FormWithConstraints';\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  innerRef?: React.Ref<HTMLInputElement>;\n  classes: {\n    [index: string]: string | undefined;\n    isPending?: string;\n    hasErrors?: string;\n    hasWarnings?: string;\n    hasInfos?: string;\n    isValid?: string;\n  };\n}\n\ninterface InputState {\n  field: undefined | 'pending' | Field;\n}\n\nexport type InputContext = FormWithConstraintsChildContext;\n\nexport class Input extends React.Component<InputProps, InputState> {\n  static contextTypes: React.ValidationMap<InputContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired\n  };\n  context!: InputContext;\n\n  static defaultProps: InputProps = {\n    classes: {\n      isPending: 'is-pending',\n      hasErrors: 'has-errors',\n      hasWarnings: 'has-warnings',\n      hasInfos: 'has-infos',\n      isValid: 'is-valid'\n    }\n  };\n\n  state: InputState = {\n    field: undefined\n  };\n\n  /* eslint-disable react/destructuring-assignment */\n\n  componentDidMount() {\n    this.context.form.addFieldWillValidateEventListener(this.fieldWillValidate);\n    this.context.form.addFieldDidValidateEventListener(this.fieldDidValidate);\n    this.context.form.addFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  componentWillUnmount() {\n    this.context.form.removeFieldWillValidateEventListener(this.fieldWillValidate);\n    this.context.form.removeFieldDidValidateEventListener(this.fieldDidValidate);\n    this.context.form.removeFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  fieldWillValidate = (fieldName: string) => {\n    // Ignore the event if it's not for us\n    if (fieldName === this.props.name) {\n      this.setState({ field: 'pending' });\n    }\n  };\n\n  fieldDidValidate = (field: Field) => {\n    // Ignore the event if it's not for us\n    if (field.name === this.props.name) {\n      this.setState({ field });\n    }\n  };\n\n  fieldDidReset = (field: Field) => {\n    // Ignore the event if it's not for us\n    if (field.name === this.props.name) {\n      this.setState({ field: undefined });\n    }\n  };\n\n  /* eslint-enable react/destructuring-assignment */\n\n  fieldValidationStates() {\n    const { field } = this.state;\n\n    const states = [];\n\n    if (field !== undefined) {\n      if (field === 'pending') {\n        states.push('isPending');\n      } else {\n        if (field.hasErrors()) states.push('hasErrors');\n        if (field.hasWarnings()) states.push('hasWarnings');\n        if (field.hasInfos()) states.push('hasInfos');\n        if (field.isValid()) states.push('isValid');\n      }\n    }\n\n    return states;\n  }\n\n  render() {\n    const { innerRef, className, classes, ...inputProps } = this.props;\n    const validationStates = this.fieldValidationStates();\n\n    let classNames = className;\n    validationStates.forEach(validationState => {\n      const tmp = classes![validationState];\n      if (tmp !== undefined) {\n        if (classNames !== undefined) {\n          classNames += ` ${tmp}`;\n        } else {\n          classNames = tmp;\n        }\n      }\n    });\n\n    return <input ref={innerRef} {...inputProps} className={classNames} />;\n  }\n}\n","import * as React from 'react';\n\n// Recursive React.Children.forEach()\n// Taken from https://github.com/fernandopasik/react-children-utilities/blob/v0.2.2/src/index.js#L68\nexport function deepForEach(\n  children: React.ReactNode,\n  fn: (child: React.ReactElement<any>) => void\n) {\n  React.Children.forEach(children, child => {\n    const element = child as React.ReactElement<any>;\n    if (element.props && element.props.children && typeof element.props.children === 'object') {\n      deepForEach(element.props.children, fn);\n    }\n    fn(element);\n  });\n}\n"],"names":["FieldFeedbackType","FieldEvent","React.PureComponent","React.createElement","PropTypes.instanceOf","Status","React.Component","React.Children"],"mappings":"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"}
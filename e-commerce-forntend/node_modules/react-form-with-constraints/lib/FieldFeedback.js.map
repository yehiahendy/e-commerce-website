{"version":3,"file":"FieldFeedback.js","sourceRoot":"","sources":["../src/FieldFeedback.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Async, AsyncChildContext } from './Async';\nimport { Field } from './Field';\nimport { FieldFeedbacks, FieldFeedbacksChildContext } from './FieldFeedbacks';\nimport { FieldFeedbackType } from './FieldFeedbackType';\nimport { FieldFeedbackValidation } from './FieldFeedbackValidation';\nimport { FieldFeedbackWhenValid } from './FieldFeedbackWhenValid';\nimport { FormWithConstraints, FormWithConstraintsChildContext } from './FormWithConstraints';\nimport { InputElement } from './InputElement';\nimport { Nullable } from './Nullable';\n\ntype WhenString =\n  | 'valid'\n  | '*'\n  | 'badInput' // input type=\"number\"\n  | 'patternMismatch' // pattern attribute\n  | 'rangeOverflow' // max attribute\n  | 'rangeUnderflow' // min attribute\n  | 'stepMismatch' // step attribute\n  | 'tooLong' // maxlength attribute\n  | 'tooShort' // minlength attribute\n  | 'typeMismatch' // input type=\"email\" or input type=\"url\"\n  | 'valueMissing'; // required attribute\ntype WhenFn = (value: string) => boolean;\ntype When = WhenString | WhenFn;\n\nexport interface FieldFeedbackClasses {\n  classes?: {\n    // FIXME Should not be declared \"?\" thanks to defaultProps?\n    [index: string]: string | undefined;\n    error?: string;\n    warning?: string;\n    info?: string;\n    whenValid?: string;\n  };\n}\n\nexport interface FieldFeedbackBaseProps {\n  when?: When; // FIXME Should not be declared \"?\" thanks to defaultProps?\n  error?: boolean;\n  warning?: boolean;\n  info?: boolean;\n}\n\nexport interface FieldFeedbackProps\n  extends FieldFeedbackBaseProps,\n    FieldFeedbackClasses,\n    React.HTMLAttributes<HTMLSpanElement> {}\n\ninterface FieldFeedbackState {\n  validation: FieldFeedbackValidation;\n\n  // Copy of input.validationMessage\n  // https://developer.mozilla.org/en/docs/Web/API/HTMLInputElement\n  // https://www.w3.org/TR/html51/sec-forms.html#the-constraint-validation-api\n  validationMessage: string;\n}\n\n// Why Nullable? https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27973\nexport type FieldFeedbackContext = FormWithConstraintsChildContext &\n  FieldFeedbacksChildContext &\n  Partial<Nullable<AsyncChildContext>>;\n\nexport class FieldFeedback<\n  Props extends FieldFeedbackBaseProps = FieldFeedbackProps\n> extends React.Component<Props, FieldFeedbackState> {\n  static defaultProps: FieldFeedbackProps = {\n    when: () => true,\n    classes: {\n      error: 'error',\n      warning: 'warning',\n      info: 'info',\n      whenValid: 'when-valid'\n    }\n  };\n\n  static contextTypes: React.ValidationMap<FieldFeedbackContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired,\n    fieldFeedbacks: PropTypes.instanceOf(FieldFeedbacks).isRequired,\n    async: PropTypes.instanceOf(Async)\n  };\n  context!: FieldFeedbackContext;\n\n  // Tested: there is no conflict with React key prop (https://reactjs.org/docs/lists-and-keys.html)\n  readonly key: string; // '0.1', '1.0', '3.5'...\n\n  constructor(props: Props, context: FieldFeedbackContext) {\n    super(props, context);\n\n    this.key = context.fieldFeedbacks.addFieldFeedback();\n\n    const { error, warning, info, when } = props;\n\n    let type = FieldFeedbackType.Error; // Default is error\n    if (when === 'valid') type = FieldFeedbackType.WhenValid;\n    else if (warning) type = FieldFeedbackType.Warning;\n    else if (info) type = FieldFeedbackType.Info;\n\n    // Special case for when=\"valid\"\n    if (type === FieldFeedbackType.WhenValid && (error || warning || info)) {\n      throw new Error(\n        'Cannot have an attribute (error, warning...) with FieldFeedback when=\"valid\"'\n      );\n    }\n\n    // eslint-disable-next-line react/state-in-constructor\n    this.state = {\n      validation: {\n        key: this.key,\n        type,\n        show: undefined // undefined means the FieldFeedback was not checked\n      },\n      validationMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    const { form, fieldFeedbacks, async } = this.context;\n\n    if (async) async.addValidateFieldEventListener(this.validate);\n    else fieldFeedbacks.addValidateFieldEventListener(this.validate);\n\n    form.addFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  componentWillUnmount() {\n    const { form, fieldFeedbacks, async } = this.context;\n\n    if (async) async.removeValidateFieldEventListener(this.validate);\n    else fieldFeedbacks.removeValidateFieldEventListener(this.validate);\n\n    form.removeFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  validate = (input: InputElement) => {\n    const { when } = this.props;\n    const { form, fieldFeedbacks } = this.context;\n\n    const field = form.fieldsStore.getField(input.name)!;\n\n    // Copy state so we don't modify it directly (use of setState() instead)\n    // eslint-disable-next-line react/no-access-state-in-setstate, react/destructuring-assignment\n    const validation = { ...this.state.validation };\n\n    if (\n      (fieldFeedbacks.props.stop === 'first' && field.hasFeedbacks(fieldFeedbacks.key)) ||\n      (fieldFeedbacks.props.stop === 'first-error' && field.hasErrors(fieldFeedbacks.key)) ||\n      (fieldFeedbacks.props.stop === 'first-warning' && field.hasWarnings(fieldFeedbacks.key)) ||\n      (fieldFeedbacks.props.stop === 'first-info' && field.hasInfos(fieldFeedbacks.key))\n    ) {\n      // Do nothing\n      validation.show = undefined; // undefined means the FieldFeedback was not checked\n    } else {\n      validation.show = false;\n\n      if (typeof when === 'function') {\n        validation.show = when(input.value);\n      } else if (typeof when === 'string') {\n        if (when === 'valid') {\n          // undefined => special case for when=\"valid\": always displayed, then FieldFeedbackWhenValid decides what to do\n          validation.show = undefined;\n        } else {\n          const { validity } = input;\n\n          if (!validity.valid) {\n            if (when === '*') {\n              validation.show = true;\n            } else if (\n              (validity.badInput && when === 'badInput') ||\n              (validity.patternMismatch && when === 'patternMismatch') ||\n              (validity.rangeOverflow && when === 'rangeOverflow') ||\n              (validity.rangeUnderflow && when === 'rangeUnderflow') ||\n              (validity.stepMismatch && when === 'stepMismatch') ||\n              (validity.tooLong && when === 'tooLong') ||\n              (validity.tooShort && when === 'tooShort') ||\n              (validity.typeMismatch && when === 'typeMismatch') ||\n              (validity.valueMissing && when === 'valueMissing')\n            ) {\n              validation.show = true;\n            }\n          }\n        }\n      } else {\n        throw new TypeError(`Invalid FieldFeedback 'when' type: ${typeof when}`);\n      }\n    }\n\n    field.addOrReplaceValidation(validation);\n\n    this.setState({\n      validation,\n      validationMessage: input.validationMessage\n    });\n\n    return validation;\n  };\n\n  fieldDidReset = (field: Field) => {\n    // Ignore the event if it's not for us\n    // eslint-disable-next-line react/destructuring-assignment\n    if (field.name === this.context.fieldFeedbacks.fieldName) {\n      this.setState(prevState => ({\n        validation: { ...prevState.validation, ...{ show: undefined } },\n        validationMessage: ''\n      }));\n    }\n  };\n\n  // Don't forget to update native/FieldFeedback.render()\n  render() {\n    const { when, error, warning, info, className, classes, style, children, ...otherProps } = (this\n      .props as unknown) as FieldFeedbackProps;\n    const { validation, validationMessage } = this.state;\n\n    const fieldFeedbackClassName = classes![validation.type]!;\n    const classNames =\n      className !== undefined ? `${className} ${fieldFeedbackClassName}` : fieldFeedbackClassName;\n\n    // Special case for when=\"valid\": always displayed, then FieldFeedbackWhenValid decides what to do\n    if (validation.type === FieldFeedbackType.WhenValid) {\n      return (\n        <FieldFeedbackWhenValid\n          data-feedback={this.key}\n          style={style}\n          className={classNames}\n          {...otherProps}\n        >\n          {children}\n        </FieldFeedbackWhenValid>\n      );\n    }\n\n    if (validation.show) {\n      const feedback = children !== undefined ? children : validationMessage;\n\n      // <span style=\"display: block\"> instead of <div> so FieldFeedback can be wrapped inside a <p>\n      return (\n        <span\n          data-feedback={this.key}\n          className={classNames}\n          style={{ display: 'block', ...style }}\n          {...otherProps}\n        >\n          {feedback}\n        </span>\n      );\n    }\n\n    return null;\n  }\n}\n"]}
{"ast":null,"code":"import { API } from './../config';\nexport const update = (userId, token, user) => {\n  return fetch(`${API}/user/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const readProfile = (userId, token) => {\n  return fetch(`${API}/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n};\nexport const updateProfile = (user, next) => {\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('jwt')) {\n      let auth = JSON.parse(localStorage.getItem('jwt'));\n      auth.user = user;\n      localStorage.setItem('jwt', JSON.stringify(auth));\n      next();\n    }\n  }\n};\nexport const getPurchaseHistory = (userId, token) => {\n  return fetch(`${API}/order/by/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["D:/Work/Zag System summer Training/e-commerce-website/e-commerce-forntend/src/user/apiUser.jsx"],"names":["API","update","userId","token","user","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","readProfile","error","updateProfile","next","window","localStorage","getItem","auth","parse","setItem","getPurchaseHistory"],"mappings":"AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,OAAO,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,IAAhB,KAAyB;AAC3C,SAAOC,KAAK,CAAE,GAAEL,GAAI,SAAQE,MAAO,EAAvB,EAA0B;AAClCI,IAAAA,MAAM,EAAE,KAD0B;AAElCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAH1B,KAFyB;AAOlCO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAP4B,GAA1B,CAAL,CASFS,IATE,CASGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXE,EAYFC,KAZE,CAYIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZX,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMG,WAAW,GAAG,CAAClB,MAAD,EAAQC,KAAR,KAAkB;AACzC,SAAOE,KAAK,CAAE,GAAEL,GAAI,SAAQE,MAAO,EAAvB,EAA0B;AAClCI,IAAAA,MAAM,EAAE,KAD0B;AAElCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAELC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAF1B;AAFyB,GAA1B,CAAL,CAOFU,IAPE,CAOGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GATE,EAUFC,KAVE,CAUIK,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAVb,CAAP;AAWH,CAZM;AAcP,OAAO,MAAMC,aAAa,GAAG,CAAClB,IAAD,EAAMmB,IAAN,KAAe;AACxC,MAAG,OAAOC,MAAP,KAAkB,WAArB,EACA;AACI,QAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAH,EACA;AACI,UAAIC,IAAI,GAAGhB,IAAI,CAACiB,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAX;AACAC,MAAAA,IAAI,CAACvB,IAAL,GAAYA,IAAZ;AACAqB,MAAAA,YAAY,CAACI,OAAb,CAAqB,KAArB,EAA2BlB,IAAI,CAACC,SAAL,CAAee,IAAf,CAA3B;AACAJ,MAAAA,IAAI;AACP;AACJ;AACJ,CAXM;AAYP,OAAO,MAAMO,kBAAkB,GAAG,CAAC5B,MAAD,EAASC,KAAT,KAAmB;AACjD,SAAOE,KAAK,CAAE,GAAEL,GAAI,aAAYE,MAAO,EAA3B,EAA8B;AACtCI,IAAAA,MAAM,EAAE,KAD8B;AAEtCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAH1B;AAF6B,GAA9B,CAAL,CAQFU,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM","sourcesContent":["import { API } from './../config';\r\nexport const update = (userId, token, user) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const readProfile = (userId,token) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(error => console.log(error));\r\n};\r\n\r\nexport const updateProfile = (user,next) => {\r\n    if(typeof window !== 'undefined')\r\n    {\r\n        if(localStorage.getItem('jwt')) \r\n        {\r\n            let auth = JSON.parse(localStorage.getItem('jwt'));\r\n            auth.user = user ;\r\n            localStorage.setItem('jwt',JSON.stringify(auth))\r\n            next();\r\n        } \r\n    }\r\n};\r\nexport const getPurchaseHistory = (userId, token) => {\r\n    return fetch(`${API}/order/by/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}
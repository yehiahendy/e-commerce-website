{"ast":null,"code":"import { API } from './../config';\n\nconst AddNewCategory = (userId, token, cateogry) => {\n  return fetch(`${API}/category/creat/${userId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(cateogry)\n  }).then(Response => {\n    return Response.json();\n  }).catch(error => {\n    return error;\n  });\n};\n\n_c = AddNewCategory;\n\nconst AddNewProduct = (userId, token, product) => {\n  return fetch(`${API}/product/creat/${userId}`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(Response => {\n    return Response.json();\n  }).catch(error => {\n    return error;\n  });\n};\n\n_c2 = AddNewProduct;\n\nconst getCategory = () => {\n  return fetch(`${API}/category/list`, {\n    method: 'GET'\n  }).then(Response => {\n    return Response.json();\n  }).catch(error => {\n    return error;\n  });\n};\n\nexport const listOrders = (userId, token) => {\n  return fetch(`${API}/product/creat/${userId}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(Response => {\n    return Response.json();\n  }).catch(error => {\n    return error;\n  });\n};\nexport const getStatusValues = (userId, token) => {\n  return fetch(`${API}/order/status-values/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(`${API}/order/${orderId}/status/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      status,\n      orderId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport { AddNewCategory };\nexport { AddNewProduct };\nexport { getCategory };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddNewCategory\");\n$RefreshReg$(_c2, \"AddNewProduct\");","map":{"version":3,"sources":["D:/Work/Zag System summer Training/e-commerce-website/e-commerce-forntend/src/admin/apiAdmin.jsx"],"names":["API","AddNewCategory","userId","token","cateogry","fetch","method","headers","Authorization","body","JSON","stringify","then","Response","json","catch","error","AddNewProduct","product","getCategory","listOrders","getStatusValues","Accept","response","err","console","log","updateOrderStatus","orderId","status"],"mappings":"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","sourcesContent":["import { API } from './../config';\r\nconst AddNewCategory = (userId,token,cateogry) => {\r\n    return(\r\n        fetch(`${API}/category/creat/${userId}`, {\r\n        method: 'POST',\r\n        headers:\r\n        { 'Content-Type': 'application/json',\r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(cateogry)\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n} \r\nconst AddNewProduct = (userId,token,product) => {\r\n    return(\r\n        fetch(`${API}/product/creat/${userId}`, {\r\n        method: 'POST',\r\n        headers:\r\n        { \r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n} \r\nconst getCategory = () => {\r\n    return(\r\n        fetch(`${API}/category/list`, {\r\n        method: 'GET'\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n}\r\nexport  const listOrders = (userId,token) => {\r\n    return(\r\n        fetch(`${API}/product/creat/${userId}`, {\r\n        method: 'GET',\r\n        headers:\r\n        { \r\n            Authorization : `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n}\r\nexport const getStatusValues = (userId, token) => {\r\n    return fetch(`${API}/order/status-values/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ status, orderId })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport {AddNewCategory} ;\r\nexport {AddNewProduct} ;\r\nexport {getCategory} ;"]},"metadata":{},"sourceType":"module"}
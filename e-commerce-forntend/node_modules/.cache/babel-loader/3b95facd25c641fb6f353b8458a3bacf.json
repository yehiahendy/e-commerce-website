{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Zag System summer Training\\\\e-commerce-website\\\\e-commerce-forntend\\\\src\\\\admin\\\\Orders.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticate } from '../user/auth';\nimport { Link } from \"react-router-dom\";\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [orders, setOrders] = useState([{}]);\n  const [statusValues, setStatusValues] = useState([]);\n  const {\n    user,\n    token\n  } = isAuthenticate();\n\n  const loadOrders = () => {\n    listOrders(user._id, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setOrders(data);\n      }\n    });\n  };\n\n  const loadStatusValues = () => {\n    getStatusValues(user._id, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setStatusValues(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadOrders();\n    loadStatusValues();\n  }, []);\n\n  const showOrdersLength = () => {\n    if (orders.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-danger display-2\",\n        children: [\"Total orders: \", orders.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-danger\",\n        children: \"No orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const showInput = (key, value) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group mb-2 mr-sm-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group-prepend\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-text\",\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      className: \"form-control\",\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n\n  const handleStatusChange = (e, orderId) => {\n    updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n      if (data.error) {\n        console.log(\"Status update failed\");\n      } else {\n        loadOrders();\n      }\n    });\n  };\n\n  const showStatus = o => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mark mb-4\",\n      children: [\"Status: \", o.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      onChange: e => handleStatusChange(e, o._id),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Update Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), statusValues.map((status, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: status,\n        children: status\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Orders\",\n    description: `G'day ${user.name}, you can manage all the orders here`,\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 offset-md-2\",\n        children: [showOrdersLength(), orders.map((o, oIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            style: {\n              borderBottom: \"5px solid indigo\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"mb-5\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-primary\",\n                children: [\"Order ID: \", o._id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: showStatus(o)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [\"Transaction ID: \", o.transaction_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [\"Amount: $\", o.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [\"Ordered by: \", o.user]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [\"Ordered on:\", \" \", moment(o.createdAt).fromNow()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [\"Delivery address: \", o.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mt-4 mb-4 font-italic\",\n              children: [\"Total products in the order:\", \" \", o.products.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), o.products.map((p, pIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              style: {\n                padding: \"20px\",\n                border: \"1px solid indigo\"\n              },\n              children: [showInput(\"Product name\", p.name), showInput(\"Product price\", p.price), showInput(\"Product total\", p.count), showInput(\"Product Id\", p._id)]\n            }, pIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this))]\n          }, oIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Orders, \"0GdFIXpRMpRUcwsYmYvkUfkXMwE=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["D:/Work/Zag System summer Training/e-commerce-website/e-commerce-forntend/src/admin/Orders.jsx"],"names":["React","useState","useEffect","Layout","isAuthenticate","Link","listOrders","getStatusValues","updateOrderStatus","moment","Orders","orders","setOrders","statusValues","setStatusValues","user","token","loadOrders","_id","then","data","error","console","log","loadStatusValues","showOrdersLength","length","showInput","key","value","handleStatusChange","e","orderId","target","showStatus","o","status","map","index","name","oIndex","borderBottom","transaction_id","amount","createdAt","fromNow","address","products","p","pIndex","padding","border","price","count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticate } from '../user/auth';\r\nimport { Link } from \"react-router-dom\";\r\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\r\nimport moment from \"moment\";\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([{}]);\r\n    const [statusValues, setStatusValues] = useState([]);\r\n\r\n    const { user, token } = isAuthenticate();\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setOrders(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setStatusValues(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, []);\r\n\r\n    const showOrdersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            );\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>;\r\n        }\r\n    };\r\n\r\n    const showInput = (key, value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                className=\"form-control\"\r\n                readOnly\r\n            />\r\n        </div>\r\n    );\r\n\r\n    const handleStatusChange = (e, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\r\n            data => {\r\n                if (data.error) {\r\n                    console.log(\"Status update failed\");\r\n                } else {\r\n                    loadOrders();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const showStatus = o => (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\r\n            <select\r\n                className=\"form-control\"\r\n                onChange={e => handleStatusChange(e, o._id)}\r\n            >\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`G'day ${\r\n                user.name\r\n            }, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n\r\n                    { orders.map((o, oIndex) => {\r\n                        return (\r\n                            <div\r\n                                className=\"mt-5\"\r\n                                key={oIndex}\r\n                                style={{ borderBottom: \"5px solid indigo\" }}\r\n                            >\r\n                                <h2 className=\"mb-5\">\r\n                                    <span className=\"bg-primary\">\r\n                                        Order ID: {o._id}\r\n                                    </span>\r\n                                </h2>\r\n\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(o)}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Transaction ID: {o.transaction_id}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount: ${o.amount}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered by: {o.user}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered on:{\" \"}\r\n                                        {moment(o.createdAt).fromNow()}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivery address: {o.address}\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                    Total products in the order:{\" \"}\r\n                                    {o.products.length}\r\n                                </h3>\r\n\r\n                                {o.products.map((p, pIndex) => (\r\n                                    <div\r\n                                        className=\"mb-4\"\r\n                                        key={pIndex}\r\n                                        style={{\r\n                                            padding: \"20px\",\r\n                                            border: \"1px solid indigo\"\r\n                                        }}\r\n                                    >\r\n                                        {showInput(\"Product name\", p.name)}\r\n                                        {showInput(\"Product price\", p.price)}\r\n                                        {showInput(\"Product total\", p.count)}\r\n                                        {showInput(\"Product Id\", p._id)}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Orders;"]},"metadata":{},"sourceType":"module"}
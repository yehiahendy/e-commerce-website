{"version":3,"file":"Input.js","sourceRoot":"","sources":["../src/Input.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Field } from './Field';\nimport { FormWithConstraints, FormWithConstraintsChildContext } from './FormWithConstraints';\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  innerRef?: React.Ref<HTMLInputElement>;\n  classes: {\n    [index: string]: string | undefined;\n    isPending?: string;\n    hasErrors?: string;\n    hasWarnings?: string;\n    hasInfos?: string;\n    isValid?: string;\n  };\n}\n\ninterface InputState {\n  field: undefined | 'pending' | Field;\n}\n\nexport type InputContext = FormWithConstraintsChildContext;\n\nexport class Input extends React.Component<InputProps, InputState> {\n  static contextTypes: React.ValidationMap<InputContext> = {\n    form: PropTypes.instanceOf(FormWithConstraints).isRequired\n  };\n  context!: InputContext;\n\n  static defaultProps: InputProps = {\n    classes: {\n      isPending: 'is-pending',\n      hasErrors: 'has-errors',\n      hasWarnings: 'has-warnings',\n      hasInfos: 'has-infos',\n      isValid: 'is-valid'\n    }\n  };\n\n  state: InputState = {\n    field: undefined\n  };\n\n  /* eslint-disable react/destructuring-assignment */\n\n  componentDidMount() {\n    this.context.form.addFieldWillValidateEventListener(this.fieldWillValidate);\n    this.context.form.addFieldDidValidateEventListener(this.fieldDidValidate);\n    this.context.form.addFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  componentWillUnmount() {\n    this.context.form.removeFieldWillValidateEventListener(this.fieldWillValidate);\n    this.context.form.removeFieldDidValidateEventListener(this.fieldDidValidate);\n    this.context.form.removeFieldDidResetEventListener(this.fieldDidReset);\n  }\n\n  fieldWillValidate = (fieldName: string) => {\n    // Ignore the event if it's not for us\n    if (fieldName === this.props.name) {\n      this.setState({ field: 'pending' });\n    }\n  };\n\n  fieldDidValidate = (field: Field) => {\n    // Ignore the event if it's not for us\n    if (field.name === this.props.name) {\n      this.setState({ field });\n    }\n  };\n\n  fieldDidReset = (field: Field) => {\n    // Ignore the event if it's not for us\n    if (field.name === this.props.name) {\n      this.setState({ field: undefined });\n    }\n  };\n\n  /* eslint-enable react/destructuring-assignment */\n\n  fieldValidationStates() {\n    const { field } = this.state;\n\n    const states = [];\n\n    if (field !== undefined) {\n      if (field === 'pending') {\n        states.push('isPending');\n      } else {\n        if (field.hasErrors()) states.push('hasErrors');\n        if (field.hasWarnings()) states.push('hasWarnings');\n        if (field.hasInfos()) states.push('hasInfos');\n        if (field.isValid()) states.push('isValid');\n      }\n    }\n\n    return states;\n  }\n\n  render() {\n    const { innerRef, className, classes, ...inputProps } = this.props;\n    const validationStates = this.fieldValidationStates();\n\n    let classNames = className;\n    validationStates.forEach(validationState => {\n      const tmp = classes![validationState];\n      if (tmp !== undefined) {\n        if (classNames !== undefined) {\n          classNames += ` ${tmp}`;\n        } else {\n          classNames = tmp;\n        }\n      }\n    });\n\n    return <input ref={innerRef} {...inputProps} className={classNames} />;\n  }\n}\n"]}
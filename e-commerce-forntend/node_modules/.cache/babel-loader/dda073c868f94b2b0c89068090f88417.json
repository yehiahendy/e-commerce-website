{"ast":null,"code":"const addItem = (item, next) => {\n  let cart = [];\n\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n    }\n\n    cart.push({ ...item,\n      count: 1\n    });\n    cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n      return cart.find(p => p._id === id);\n    });\n    localStorage.setItem('cart', JSON.stringify(cart));\n    next();\n  }\n};\n\nconst itemTotal = () => {\n  if (typeof window !== 'undefined') {\n    return JSON.parse(localStorage.getItem('cart')) !== null && JSON.parse(localStorage.getItem('cart')).length;\n  }\n\n  return 0;\n};\n\nconst getItems = () => {\n  if (typeof window !== 'undefined') {\n    return JSON.parse(localStorage.getItem('cart'));\n  }\n};\n\nconst updateItem = (productId, count) => {\n  let cart = [];\n\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n    }\n\n    cart.map((p, i) => {\n      if (p._id === productId) {\n        cart[i].count = count;\n      }\n    });\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n};\n\nconst removeItem = productId => {\n  let cart = [];\n\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n    }\n\n    cart.map((p, i) => {\n      if (p._id === productId) {\n        cart.splice(i, 1);\n      }\n    });\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n\n  return cart;\n};\n\nexport const emptyCart = next => {\n  if (typeof window !== 'undefined') {\n    localStorage.removeItem('cart');\n    next();\n  }\n};\nexport { addItem };\nexport { getItems };\nexport { itemTotal };\nexport { updateItem };\nexport { removeItem };","map":{"version":3,"sources":["D:/Work/Zag System summer Training/e-commerce-website/e-commerce-forntend/src/core/CartHelper.jsx"],"names":["addItem","item","next","cart","window","localStorage","getItem","JSON","parse","push","count","Array","from","Set","map","p","_id","id","find","setItem","stringify","itemTotal","length","getItems","updateItem","productId","i","removeItem","splice","emptyCart"],"mappings":"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","sourcesContent":["const addItem = (item,next) => {\r\n    let cart = []\r\n    if(typeof window !== 'undefined')\r\n    {\r\n        if(localStorage.getItem('cart'))\r\n        {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count:1\r\n        });\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n        localStorage.setItem('cart',JSON.stringify(cart))\r\n        next();\r\n    }\r\n}\r\nconst itemTotal = () => {\r\n    if(typeof window !== 'undefined')\r\n    {\r\n        \r\n        return (JSON.parse(localStorage.getItem('cart')) !== null  && JSON.parse(localStorage.getItem('cart')).length);\r\n    }\r\n    return 0 ;\r\n}\r\nconst getItems = () => {\r\n    if(typeof window !== 'undefined')\r\n    {\r\n        return JSON.parse(localStorage.getItem('cart'))\r\n    }\r\n}\r\nconst updateItem = (productId,count) => {\r\n    let cart = []\r\n    if(typeof window !== \"undefined\")\r\n    {\r\n       \r\n        if(localStorage.getItem('cart'))\r\n        {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.map((p,i) => {\r\n            if(p._id === productId)\r\n            {\r\n                cart[i].count = count\r\n            }\r\n        })\r\n        localStorage.setItem('cart',JSON.stringify(cart))\r\n    }\r\n}\r\nconst removeItem = (productId) => {\r\n    let cart = []\r\n    if(typeof window !== \"undefined\")\r\n    {\r\n        if(localStorage.getItem('cart'))\r\n        {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.map((p,i) => {\r\n            if(p._id === productId)\r\n            {\r\n                cart.splice(i,1)\r\n            }\r\n        })\r\n        localStorage.setItem('cart',JSON.stringify(cart))\r\n    }\r\n    return cart;\r\n}\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n\r\nexport {addItem};\r\nexport {getItems};\r\nexport {itemTotal};\r\nexport {updateItem};\r\nexport {removeItem};"]},"metadata":{},"sourceType":"module"}
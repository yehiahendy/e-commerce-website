{"version":3,"file":"Field.js","sourceRoot":"","sources":["../src/Field.ts"],"names":[],"mappings":";;;AAAA,2CAA0C;AAC1C,yDAAwD;AAKxD;IAWE,eAA4B,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QAVxB,gBAAW,GAA8B,EAAE,CAAC;IAUjB,CAAC;IAE5C,sCAAsB,GAAtB,UAAuB,UAAmC;QAExD,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAA,WAAW,IAAI,OAAA,WAAW,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG,EAAlC,CAAkC,CAAC,CAAC;QACxF,IAAI,CAAC,GAAG,CAAC,CAAC;YAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;;YACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAED,gCAAgB,GAAhB;QACE,uBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,kCAAkB,GAAlB,UAAmB,IAAuB,EAAE,iBAA0B;QACpE,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAC1B,UAAA,aAAa;YACX,OAAA,CAAC,iBAAiB,KAAK,SAAS;gBAC9B,aAAa,CAAC,GAAG,CAAC,UAAU,CAAI,iBAAiB,MAAG,CAAC,CAAC;gBACxD,aAAa,CAAC,IAAI,KAAK,IAAI;gBAC3B,aAAa,CAAC,IAAI,KAAK,IAAI;QAH3B,CAG2B,CAC9B,CAAC;IACJ,CAAC;IAED,yBAAS,GAAT,UAAU,iBAA0B;QAClC,OAAO,IAAI,CAAC,kBAAkB,CAAC,qCAAiB,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;IAC7E,CAAC;IAED,2BAAW,GAAX,UAAY,iBAA0B;QACpC,OAAO,IAAI,CAAC,kBAAkB,CAAC,qCAAiB,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IAC/E,CAAC;IAED,wBAAQ,GAAR,UAAS,iBAA0B;QACjC,OAAO,IAAI,CAAC,kBAAkB,CAAC,qCAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;IAC5E,CAAC;IAED,4BAAY,GAAZ,UAAa,iBAA0B;QACrC,OAAO,CACL,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CACjC,CAAC;IACJ,CAAC;IAED,uBAAO,GAAP;QACE,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;IAC3B,CAAC;IACH,YAAC;AAAD,CAAC,AAzDD,IAyDC;AAzDY,sBAAK","sourcesContent":["import { clearArray } from './clearArray';\nimport { FieldFeedbackType } from './FieldFeedbackType';\nimport { FieldFeedbackValidation } from './FieldFeedbackValidation';\nimport { HTMLInput, TextInput } from './InputElement';\n\n// Field is a better name than Input, [Django Form fields](https://docs.djangoproject.com/en/1.11/ref/forms/fields/)\nexport class Field {\n  public readonly validations: FieldFeedbackValidation[] = [];\n\n  // Can be useful for the user to get the DOM element\n  // https://github.com/tkrotoff/react-form-with-constraints/issues/41\n  //\n  // Populated by FormWithConstraints.validateField()\n  //\n  // Cannot be set as readonly :/\n  public element?: HTMLInput | TextInput;\n\n  constructor(public readonly name: string) {}\n\n  addOrReplaceValidation(validation: FieldFeedbackValidation) {\n    // [Update if exists or add new element to array of objects](https://stackoverflow.com/a/49375465/990356)\n    const i = this.validations.findIndex(_validation => _validation.key === validation.key);\n    if (i > -1) this.validations[i] = validation;\n    else this.validations.push(validation);\n  }\n\n  clearValidations() {\n    clearArray(this.validations);\n  }\n\n  hasFeedbacksOfType(type: FieldFeedbackType, fieldFeedbacksKey?: string) {\n    return this.validations.some(\n      fieldFeedback =>\n        (fieldFeedbacksKey === undefined ||\n          fieldFeedback.key.startsWith(`${fieldFeedbacksKey}.`)) &&\n        fieldFeedback.type === type &&\n        fieldFeedback.show === true\n    );\n  }\n\n  hasErrors(fieldFeedbacksKey?: string) {\n    return this.hasFeedbacksOfType(FieldFeedbackType.Error, fieldFeedbacksKey);\n  }\n\n  hasWarnings(fieldFeedbacksKey?: string) {\n    return this.hasFeedbacksOfType(FieldFeedbackType.Warning, fieldFeedbacksKey);\n  }\n\n  hasInfos(fieldFeedbacksKey?: string) {\n    return this.hasFeedbacksOfType(FieldFeedbackType.Info, fieldFeedbacksKey);\n  }\n\n  hasFeedbacks(fieldFeedbacksKey?: string) {\n    return (\n      this.hasErrors(fieldFeedbacksKey) ||\n      this.hasWarnings(fieldFeedbacksKey) ||\n      this.hasInfos(fieldFeedbacksKey)\n    );\n  }\n\n  isValid() {\n    return !this.hasErrors();\n  }\n}\n"]}
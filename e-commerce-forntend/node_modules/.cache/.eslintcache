[{"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\index.js":"1","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\App.js":"2","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\Router.jsx":"3","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\Signup.jsx":"4","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\Signin.jsx":"5","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Home.jsx":"6","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Layout.jsx":"7","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Menu.jsx":"8","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\Signout.jsx":"9","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\auth.jsx":"10","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\auth\\PrivateRoute.jsx":"11","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\userDashBoard.jsx":"12","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\adminDashBoard.jsx":"13","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\auth\\AdminRoute.jsx":"14","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\AddCategory.jsx":"15","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\apiAdmin.jsx":"16","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\AddProduct.jsx":"17","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\apiCore.jsx":"18","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Card.jsx":"19","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\config.js":"20","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\ShowImage.jsx":"21","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Shop.jsx":"22","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\CheckBox.jsx":"23","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\FixedPrice.js":"24","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\RadioBox.jsx":"25","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Search.jsx":"26","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Product.jsx":"27","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\CartHelper.jsx":"28","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Cart.jsx":"29","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\CheckOut.jsx":"30","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\Orders.jsx":"31","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\ManageProduct.jsx":"32","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\UpdateProduct.jsx":"33","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\Profile.jsx":"34","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\apiUser.jsx":"35"},{"size":203,"mtime":1627305526696,"results":"36","hashOfConfig":"37"},{"size":213,"mtime":1627305680633,"results":"38","hashOfConfig":"37"},{"size":2085,"mtime":1628871310152,"results":"39","hashOfConfig":"37"},{"size":3173,"mtime":1628807538575,"results":"40","hashOfConfig":"37"},{"size":4957,"mtime":1628531306232,"results":"41","hashOfConfig":"37"},{"size":2020,"mtime":1628015238039,"results":"42","hashOfConfig":"37"},{"size":470,"mtime":1627301435906,"results":"43","hashOfConfig":"37"},{"size":2715,"mtime":1628805878756,"results":"44","hashOfConfig":"37"},{"size":759,"mtime":1627285616755,"results":"45","hashOfConfig":"37"},{"size":499,"mtime":1626530526006,"results":"46","hashOfConfig":"37"},{"size":451,"mtime":1628871194335,"results":"47","hashOfConfig":"37"},{"size":4185,"mtime":1628535814868,"results":"48","hashOfConfig":"37"},{"size":2019,"mtime":1628513863519,"results":"49","hashOfConfig":"37"},{"size":479,"mtime":1626540855568,"results":"50","hashOfConfig":"37"},{"size":2100,"mtime":1626895163001,"results":"51","hashOfConfig":"37"},{"size":4008,"mtime":1628521865533,"results":"52","hashOfConfig":"37"},{"size":6740,"mtime":1628958502631,"results":"53","hashOfConfig":"37"},{"size":3555,"mtime":1628345898739,"results":"54","hashOfConfig":"37"},{"size":4053,"mtime":1628807223577,"results":"55","hashOfConfig":"37"},{"size":49,"mtime":1626018092612,"results":"56","hashOfConfig":"37"},{"size":383,"mtime":1627286896598,"results":"57","hashOfConfig":"37"},{"size":4100,"mtime":1628807161885,"results":"58","hashOfConfig":"37"},{"size":939,"mtime":1627313801084,"results":"59","hashOfConfig":"37"},{"size":527,"mtime":1627317657626,"results":"60","hashOfConfig":"37"},{"size":614,"mtime":1627318340857,"results":"61","hashOfConfig":"37"},{"size":3548,"mtime":1628061719887,"results":"62","hashOfConfig":"37"},{"size":2254,"mtime":1628083216626,"results":"63","hashOfConfig":"37"},{"size":2072,"mtime":1628276449220,"results":"64","hashOfConfig":"37"},{"size":1882,"mtime":1628807095800,"results":"65","hashOfConfig":"37"},{"size":6531,"mtime":1628282800910,"results":"66","hashOfConfig":"37"},{"size":6307,"mtime":1628954531844,"results":"67","hashOfConfig":"37"},{"size":2403,"mtime":1628518569203,"results":"68","hashOfConfig":"37"},{"size":6820,"mtime":1628521035875,"results":"69","hashOfConfig":"37"},{"size":3165,"mtime":1628532254806,"results":"70","hashOfConfig":"37"},{"size":1700,"mtime":1628859302488,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1j6rn0f",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"74"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\index.js",[],["160","161"],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\App.js",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\Router.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\Signup.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\Signin.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Home.jsx",["162","163"],"import React from 'react';\r\nimport Layout from './Layout';\r\nimport { getProduct } from './apiCore';\r\nimport { useState, useEffect } from 'react';\r\nimport Card from './Card';\r\nimport { API } from '../config';\r\nconst Home = () => {\r\nconst [productBySell,setproductBySell] = useState([])\r\nconst [productByArrival,setproductByArrival] = useState([]);\r\nconst [error,setError] = useState(false);\r\n\r\n    const loadProductBySell = () => {\r\n        return(\r\n            getProduct('sold')\r\n            .then(data => {\r\n                if(data.error)\r\n                {\r\n                    setError(data.error)\r\n                }\r\n                else\r\n                {\r\n                    setproductBySell(data)\r\n                }\r\n            })\r\n        );\r\n    }\r\n    const loadProductByArrival = () => {\r\n        return(\r\n            getProduct('createdAt')\r\n            .then(data => {\r\n                if(data.error)\r\n                {\r\n                    setError(data.error)\r\n                }\r\n                else\r\n                {\r\n                    setproductByArrival(data)\r\n                }\r\n            })\r\n        );\r\n    }\r\nuseEffect(() => {\r\n    loadProductBySell();\r\n    loadProductByArrival();\r\n},[])\r\nreturn(\r\n\r\n    <Layout title =\"Home Page\" discreption = \"This is the Home page for Ecommerce website \" className = \"container\">\r\n        <h2>New Arrival</h2>\r\n        <div className = \"row\">\r\n        {productByArrival.map((product,i) => {\r\n                return(\r\n            <div key = {i} className = \"col-4 mb-3\">\r\n            <Card  product = {product}/>\r\n            </div>\r\n                );\r\n            })}\r\n        </div>\r\n        <br></br>\r\n        <h2>Best Sellers</h2>\r\n        <div className = \"row\">\r\n        {productBySell.map((product,i) => {\r\n                return(\r\n            <div key = {i} className = \"col-4 mb-3\">\r\n            <Card  product = {product}/>\r\n            </div>\r\n                );\r\n            })}\r\n        </div>\r\n    </Layout>\r\n);\r\n}\r\nexport default Home; ","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Layout.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Menu.jsx",["164"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\nimport SignOut from '../user/Signout';\r\nimport { isAuthenticate } from '../user/auth';\r\nimport { Fragment } from 'react';\r\nimport Cart from './Cart';\r\nimport { itemTotal } from './CartHelper';\r\nconst isActive = (history,path) =>\r\n{\r\n\r\nreturn  history.location.pathname === path ? {color : '#ff9900'} : {color : '#FFFF'} ;\r\n}\r\nconst menu = ({history}) =>{ \r\n    return(\r\n        <div>\r\n            <ul className = \"nav nav-tabs bg-primary\">\r\n                <li className = \"nav-item\">\r\n                    <Link className = \"nav-link\" to =\"/\" style = {isActive(history,\"/\")}>Home</Link>\r\n                </li>\r\n                <li className = \"nav-item\">\r\n                    <Link className = \"nav-link\" to =\"/shop\" style = {isActive(history,\"/shop\")}>Shop</Link>\r\n                </li>\r\n                <li className = \"nav-item\">\r\n                    <Link className = \"nav-link\" to =\"/cart\" style = {isActive(history,\"/cart\")}>\r\n                        Cart <sup className = 'cart-badge'><small>{itemTotal()}</small></sup>\r\n                    </Link>\r\n                </li>\r\n                {\r\n                    ((isAuthenticate()) && (isAuthenticate().user.role === 0) && \r\n                    (<li className = \"nav-item\">\r\n                    <Link className = \"nav-link\" to =\"/user/dashboard\" style = {isActive(history,\"/user/dashboard\")}>DashBoard</Link></li>))\r\n                }\r\n                {\r\n                    ((isAuthenticate()) && (isAuthenticate().user.role === 1) && \r\n                    (<li className = \"nav-item\">\r\n                    <Link className = \"nav-link\" to =\"/admin/dashboard\" style = {isActive(history,\"/admin/dashboard\")}>DashBoard</Link></li>))\r\n                }\r\n                \r\n                {!isAuthenticate() && (\r\n                <Fragment>\r\n                <li className = \"nav-item\">\r\n                <Link className = \"nav-link\" to =\"/signup\" style =  {isActive(history,\"/signup\")}>Signup</Link>\r\n                </li>\r\n                <li className = \"nav-item\">\r\n                <Link className = \"nav-link\" to =\"/signin\" style =  {isActive(history,\"/signin\")}>Signin</Link>\r\n                </li>\r\n                </Fragment>\r\n                )}\r\n                {isAuthenticate() && (                <li className = \"nav-item\">\r\n                <span className = \"nav-link\"  style =  {{cursor : \"pointer\" ,color :'#ffff'}} onClick ={() => SignOut (() => {\r\n                history.push('/');\r\n                })  } >SignOut</span>\r\n                </li>)}\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport  default withRouter(menu) ;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\Signout.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\auth.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\auth\\PrivateRoute.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\userDashBoard.jsx",["165"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPurchaseHistory } from \"./apiUser\";\r\nimport { isAuthenticate } from \"./auth\";\r\nimport moment from \"moment\";\r\n\r\nconst Dashboard = () => {\r\n    const [history, setHistory] = useState([]);\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticate();\r\n    const token = isAuthenticate().token;\r\n    const userId = isAuthenticate().user._id;\r\n        console.log(userId)\r\n    const init = (userId, token) => {\r\n\r\n        getPurchaseHistory(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setHistory(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(_id, token);\r\n    }, []);\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/update`}>\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        {history.map((h, i) => {\r\n                            return (\r\n                                <div>\r\n                                    <hr />\r\n                                    {h.products.map((p, i) => {\r\n                                        return (\r\n                                            <div key={i}>\r\n                                                <h6>Product name: {p.name}</h6>\r\n                                                <h6>\r\n                                                    Product price: ${p.price}\r\n                                                </h6>\r\n                                                <h6>\r\n                                                    Purchased date:{\" \"}\r\n                                                    {moment(\r\n                                                        p.createdAt\r\n                                                    ).fromNow()}\r\n                                                </h6>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\adminDashBoard.jsx",["166"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticate } from './auth';\r\nconst adminDashBoard = () => {\r\n    const {user: {_id,name,email,role}} = isAuthenticate()\r\n    const adminInfo = () => {\r\n        return(\r\n            \r\n    <div className =\"card mb-5\">\r\n        <h3 className = \"card-header\">Admin Info</h3>\r\n        <ul className = \"list-group\">\r\n            <li className =\"list-group-item\">{name}</li>\r\n            <li className =\"list-group-item\">{email}</li>\r\n            <li className =\"list-group-item\">{role === 1 ? 'Admin' : 'User' }</li>\r\n        </ul>\r\n    </div>\r\n        );\r\n    };\r\n\r\n    const adminLinks = () => {\r\n        return(\r\n            <aside>\r\n                <header className = \"card-header\"> <strong> User links</strong></header>\r\n                <ul className = \"list-group\">\r\n                    <li className = \"list-group-item\">\r\n                        <NavLink to = \"/create/category\">Create New Category</NavLink>\r\n                    </li>\r\n                    <li className = \"list-group-item\">\r\n                        <NavLink to = \"/create/product\"> Create  New Product</NavLink>\r\n                    </li>\r\n                    <li className = \"list-group-item\">\r\n                        <NavLink to = \"/admin/orders\"> Orders</NavLink>\r\n                    </li>\r\n                    <li className = \"list-group-item\">\r\n                        <NavLink to = \"/manage/products\"> Manage Products</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </aside>\r\n        );\r\n    }\r\n    return(\r\n        <Layout title =\"DashBoard Page\" discreption = {`Welcome ${name}`}  className = \"container\">\r\n            <div className = \"row\">\r\n                <div className = \"col-3\">{adminLinks()}</div>\r\n                <div className = \"col-9\">\r\n                {adminInfo()}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\nexport default adminDashBoard ;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\auth\\AdminRoute.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\AddCategory.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\apiAdmin.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\AddProduct.jsx",["167","168","169","170"],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\apiCore.jsx",["171"],"import React from 'react';\r\nimport { API } from './../config';\r\nimport queryString from 'query-string';\r\nconst getProduct = (sortby) => {\r\n    return(\r\n        fetch(`${API}/products?sortBy=${sortby}&order=desc&limit=6`, {\r\n        method: 'GET'\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n}\r\nconst getCategory = () => {\r\n    return(\r\n        fetch(`${API}/category/list`, {\r\n        method: 'GET'\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n} \r\nconst getFilterdProducts= (skip,limit,filters={}) => {\r\n    const data = {\r\n        skip,\r\n        limit,\r\n        filters\r\n    };\r\n    return(\r\n        fetch(`${API}/products/by/search`, {\r\n        method: 'POST',\r\n        headers:\r\n        { 'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n} \r\nconst list = (params) => {\r\n    const query = queryString.stringify(params)\r\n    return( \r\n        \r\n        fetch(`${API}/products/search?${query}`, {\r\n        method: 'GET'\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n}\r\nconst read = productId => {\r\n    \r\n    return( \r\n        \r\n        fetch(`${API}/product/${productId}`, {\r\n        method: 'GET'\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n}\r\nconst listRelatedProducts = productId => {\r\n    \r\n    return( \r\n        \r\n        fetch(`${API}/products/relate/${productId}`, {\r\n        method: 'GET'\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n}\r\nconst getBraintreeClientToken = (userId,token) => {\r\n    return(\r\n        fetch(`${API}/braintree/gettoken/${userId}`, {\r\n        method: 'GET',\r\n        headers:\r\n        { 'Content-Type': 'application/json',\r\n            Authorization : `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(Response => {\r\n        return Response.json();\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    })\r\n    );\r\n} \r\nexport const processPayment = (userId, token, paymentData) => {\r\n    return fetch(`${API}/braintree/payment/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(paymentData)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n    return fetch(`${API}/order/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ order: createOrderData })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport {getProduct};\r\nexport {getBraintreeClientToken};\r\nexport {getCategory};\r\nexport {getFilterdProducts};\r\nexport {list};\r\nexport {read};\r\nexport {listRelatedProducts};\r\n","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Card.jsx",["172","173","174"],"import React, { useRef } from 'react';\r\nimport {useState,useEffect} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport Moment from 'react-moment';\r\nimport {addItem, itemTotal,updateItem,removeItem} from './CartHelper'\r\n\r\nconst Card = ({product,viewProductButton = true,viewAddToCart = true ,cartUpdate = false,\r\n    showRemoveProductButton = false,location = '/',\r\n    setRun = f => f,\r\n    run = undefined}) => {\r\n    const [redirect,setRedirect] = useState(false)\r\n    const [count, setCount] = useState(product.count);\r\n\r\n    const handleChange = productId => event => {\r\n        setRun(!run); // run useEffect in parent Cart\r\n        setCount(event.target.value < 1 ? 1 : event.target.value);\r\n        if (event.target.value >= 1) {\r\n          updateItem(productId, event.target.value);\r\n        }\r\n      };\r\n    const showProductButton = () => {\r\n        return(\r\n            <Link to = {`/product/${product._id}`}  className = \"pr-3\">\r\n            {\r\n                viewProductButton && (\r\n                    <button className = \"btn btn-outline-primary  mt-2 mb-2\">View Product</button>\r\n                )\r\n            }\r\n            \r\n        </Link>\r\n        );\r\n    }\r\n    /********************************************************** */\r\n    const showAddtoCartButton = () => {\r\n        return(\r\n            \r\n                viewAddToCart && (<button className = \"btn btn-outline-warning mt-2 mb-2\" onClick = {onClickHandler}>Add to cart</button>)\r\n        );\r\n    }\r\n    const showRemoveButton = showRemoveProductButton => {\r\n        return (\r\n            showRemoveProductButton && (\r\n            <button\r\n              onClick={() => {\r\n                removeItem(product._id);\r\n                setRun(!run); // run useEffect in parent Cart\r\n              }}\r\n              className=\"btn btn-outline-danger mt-2 mb-2\"\r\n            >\r\n              Remove Product\r\n            </button>\r\n          )\r\n        );\r\n      };\r\n    const showStock = quantity => {\r\n        return quantity > 0 ? (\r\n            <span className=\"badge alert-success\">In Stock</span>\r\n        ) : (\r\n        <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\r\n        );\r\n    };\r\n    const onClickHandler = () => {\r\n        addItem(product, () => {\r\n            setRedirect(true);\r\n        })\r\n    }\r\n    const RedirectTo = () =>{\r\n        if(redirect)\r\n        return(\r\n            <Redirect to = {location}></Redirect>\r\n        );\r\n    }\r\n    const showCartUpdateOptions = cartUpdate => {\r\n        return (\r\n          cartUpdate && (\r\n            <div>\r\n              <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">Adjust Quantity</span>\r\n                </div>\r\n                <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n      };\r\n    return(\r\n        \r\n        <div className = \"card\">\r\n            <div className = \"card-header name\">{product.name}</div>\r\n            <div className = \"card-body\">\r\n                <ShowImage item = {product} url = \"products\"/>\r\n                <p className = \"black-10\">{product.description}</p>\r\n                <p className = \"black-9\">Cartegory: {product.category && product.category.name}</p>\r\n                <p className = \"black-8\">${product.price}</p>\r\n                <p className = \"black-7\">\r\n                    Add on <Moment fromNow>{product.createdAt}</Moment>\r\n                </p>\r\n                \r\n                <br></br>\r\n                {showProductButton()}\r\n                {showAddtoCartButton()}\r\n                {showRemoveButton(showRemoveProductButton) }\r\n                {showCartUpdateOptions(cartUpdate)}\r\n                {showStock(product.Quentity)}\r\n                {RedirectTo()}\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\config.js",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\ShowImage.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Shop.jsx",["175","176","177"],"import Layout from \"./Layout\";\r\nimport { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport {getCategory, getFilterdProducts} from './apiCore'\r\nimport CheckBox from './CheckBox';\r\nimport { FixedPrice } from \"./FixedPrice\";\r\nimport RadioBox from \"./RadioBox\";\r\nimport Card from './Card';\r\nimport Search from \"./Search\";\r\nconst Shop = () =>{\r\n    const [categories,setCategories]  = useState([]);\r\n    const [myFilters,setMyFilters]  = useState({\r\n        filter: {category:[],price:[]}\r\n    });\r\n    const [error,setError]  = useState(false);\r\n    const [skip,setSkip]  = useState(0);\r\n    const [limit,setLimit]  = useState(6);\r\n    const [size,setSize]  = useState(0);\r\n    const [filteredResults,setFilteredResults]  = useState([]);\r\n    const init = () => {\r\n        getCategory()\r\n        .then(data => {\r\n            if(data.error)\r\n            {\r\n                setError(data.error);\r\n            }\r\n            else\r\n            {\r\n                setCategories(data)\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        init();\r\n        loadFilterResults(myFilters.filter);\r\n    }\r\n    ,[]);\r\n    const handelFiler = (filters,filterBy) => {\r\n        const newFilters = {...myFilters}\r\n        newFilters.filter[filterBy] = filters\r\n        if(filterBy === 'price')\r\n        {\r\n            let priceValues = handelPrice(filters)\r\n            newFilters.filter[filterBy] = priceValues\r\n        }\r\n        loadFilterResults(myFilters.filter)\r\n        setMyFilters(newFilters)\r\n    }\r\n    const loadFilterResults = filters =>\r\n    {\r\n        getFilterdProducts(skip,limit,filters)\r\n        .then(data => {\r\n            if(data.error)\r\n            {\r\n                setError(data.error)\r\n            }else\r\n            {\r\n                setFilteredResults(data.data)\r\n                setSize(data.size)\r\n            }\r\n        })\r\n    }\r\n    const handelPrice = value => {\r\n        const data = FixedPrice\r\n        let array = [] \r\n        for(let key in data)\r\n        {\r\n            if(data[key]._id === parseInt(value))\r\n            array = data[key].array;\r\n        }\r\n        return array\r\n    }  \r\n    const loadMore = () =>\r\n    {\r\n        let toSkip = skip + limit \r\n        getFilterdProducts(toSkip,limit,myFilters.filter)\r\n        .then(data => {\r\n            if(data.error)\r\n            {\r\n                setError(data.error)\r\n            }else\r\n            {\r\n                setFilteredResults([...filteredResults,...data.data]);\r\n                setSize(data.size)\r\n                setSkip(0)\r\n            }\r\n        })\r\n    }\r\n    const loadMoreBtn = () => {\r\n        return(\r\n            size > 0 && size >= limit && (<button className = \"btn btn-outline-warning mb-5\" onClick ={loadMore}>\r\n                Load More\r\n            </button>)\r\n        );\r\n    }\r\n    const createUi = () => {\r\n        return (\r\n            <div className = \"row\">\r\n            <Search></Search>\r\n            <div className = \"col-4\">\r\n            <h4>Filterd By Category</h4>\r\n            <ul>\r\n            <CheckBox categories ={categories} handelFiler = {filter => handelFiler(filter,'category')}/>\r\n            </ul>\r\n            <h4>Filterd By Price</h4>\r\n            <ul>\r\n            <RadioBox price ={FixedPrice} handelFiler = {filter => handelFiler(filter,'price')} />\r\n            </ul>\r\n            </div>\r\n            <div className = \"col-8\">\r\n            <h2>Best Sellers</h2>\r\n            <div className=\"row\">\r\n            {filteredResults.map((product,i) => {\r\n                return(\r\n            <div key = {i} className = \"col-4 mb-3\">\r\n            <Card  product = {product} location = {'/shop'}/>\r\n            </div>\r\n                );\r\n            })}\r\n            <div>\r\n            <hr></hr>\r\n            {loadMoreBtn()}\r\n            </div>\r\n            \r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n    return(\r\n        <Layout title =\"Shop Page\" discreption = \"Welcome to our E-commerce Website \" className = \"container-fluid\">\r\n        {createUi()}\r\n    </Layout>\r\n    );\r\n}\r\nexport default Shop;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\CheckBox.jsx",["178"],"import React, { useEffect,useState } from 'react';\r\nconst CheckBox = ({categories,handelFiler}) => {\r\n    const [checked,setChecked] = useState([]);\r\n    const handelToggle = c => () => {\r\n        const currentCategoryId = checked.indexOf(c)\r\n        const newCheckedCategoryId = [...checked]\r\n        if(currentCategoryId === -1 )\r\n        {\r\n            newCheckedCategoryId.push(c)\r\n        }\r\n        else\r\n        {\r\n            newCheckedCategoryId.splice(currentCategoryId,1)\r\n        }\r\n        setChecked(newCheckedCategoryId)\r\n        handelFiler(newCheckedCategoryId)\r\n    }\r\n    return(\r\n    categories.map((c,i) => (\r\n    <li className = \"list-unstyled\"  key = {i}>\r\n    <input type = \"checkbox\"  className =\"form-check-input\" onChange = {handelToggle(c._id)} value ={checked.indexOf(c._id === -1)}></input>\r\n    <label className = \"form-check-label\">{c.name}</label>\r\n    </li>\r\n\r\n    ))\r\n    );\r\n} \r\nexport default CheckBox;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\FixedPrice.js",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\RadioBox.jsx",["179","180"],"import React, { useState,Fragment } from 'react';\r\n\r\nconst RadioBox = ({price,handelFiler}) => {\r\n    const [value,setValue] = useState(0)\r\n    const handelChange = (event) =>{\r\n        //\r\n        handelFiler(event.target.value);\r\n        setValue(event.target.value);\r\n    }\r\n    return(\r\n        price.map((p,i) => (\r\n        <div  key = {i}>\r\n        <input type =\"radio\" className = \"mr-2 ml-4\" value = {`${p._id}`} onChange ={handelChange} name ={p}></input>\r\n        <label className = \"form-check-label mr-2 ml-4\">{`${p.name}`}</label>\r\n        </div>\r\n        ))\r\n        );\r\n\r\n}\r\nexport default RadioBox;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Search.jsx",["181","182"],"import { useState, useEffect } from 'react';\r\nimport { getCategory,list } from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Search = () => {\r\n    const [data,setData] = useState({\r\n        categories : [],\r\n        category:'',\r\n        search: '',\r\n        results : [],\r\n        searched : false \r\n\r\n    });\r\n    const {categories,category,search ,results ,searched } = data; \r\n    const loadcategories = () => \r\n    {\r\n        getCategory().then(data => {\r\n            if(data.error)\r\n            {\r\n                console.log(data.error)\r\n            }\r\n            else\r\n            {\r\n                setData({...data,categories:data,searched:false})\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        loadcategories();\r\n    },[]) \r\n    const onSubmitHandler = (e) => \r\n    {\r\n        e.preventDefault();\r\n\r\n        searchData();\r\n        \r\n        \r\n    }\r\n    const searchData = () => {\r\n        if(search)\r\n        {\r\n            list({search:search,category:category}).then(Responsen => {\r\n                if(Responsen.error)\r\n                {\r\n                    console.log(Response.error)\r\n                }\r\n                else\r\n                {\r\n                    setData({...data,results:Responsen,searched:true})\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const onHandelChange = name => event => \r\n    {\r\n        setData({...data,[name] : event.target.value})\r\n        \r\n    }\r\n    const searchedProducts = (results=[]) =>\r\n    {\r\n        return(\r\n            <div className ='row'>\r\n                {results.map((p,i) => (\r\n                    <Card key = {i} product = {p}/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n    const searchedProductsResults = (searched,results) => \r\n    {\r\n        \r\n        return (\r\n            <h2>{results ? 'Found' : 'Not Found'}</h2>\r\n        );\r\n    }\r\n    const SearchForm = () => (\r\n        <form onSubmit={onSubmitHandler}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={onHandelChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={onHandelChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    )\r\n    return(\r\n        <div className = 'row ml-2 mr-2'>\r\n            <div className = \"container\">\r\n                {SearchForm()}\r\n            </div>\r\n            <div className = \"container-fluid row \">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    ); \r\n\r\n}\r\nexport default Search","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Product.jsx",["183"],"import Layout from './Layout';\r\nimport { useState, useEffect } from 'react';\r\nimport {listRelatedProducts, read} from './apiCore'\r\nimport Card from './Card';\r\nconst Product = props => \r\n{\r\n    const [product,setProduct] = useState({})\r\n    const [listedProducts,setListedProducts] = useState([{}])\r\n    const [error,setError] = useState(false)\r\n    const loadSingleProduct = productId => {\r\n        read(productId)\r\n        .then(data => \r\n            {\r\n                if(data.error)\r\n                {\r\n                    setError(data.error)\r\n                    console.log(error)\r\n                }\r\n                else\r\n                {\r\n                    setProduct(data)\r\n                }\r\n            })\r\n            listRelatedProducts(productId)\r\n            .then(data => \r\n                {\r\n                    if(data.error)\r\n                    {\r\n                        setError(data.error)\r\n                        console.log(error)\r\n                    }\r\n                    else\r\n                    {\r\n                        setListedProducts(data)\r\n                    }\r\n                })\r\n    }\r\n    useEffect(() => {\r\n        const ProductId = props.match.params.productId\r\n        loadSingleProduct(ProductId)\r\n    } ,[props.match.params.productId])\r\n    const relatedProductsUi = () => {\r\n        return(\r\n            <div className = 'col-4 mr-3'>\r\n                <h2>\r\n                    Related Products\r\n                </h2>\r\n                {listedProducts.map((P,i) => (\r\n                    <div key = {i} className = 'mr-3 mb-3'>\r\n                    <Card  product = {P}></Card>\r\n                    </div>\r\n                ))}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    const singleProductsUi = () => {\r\n        return(\r\n            <div className = \" col-8\">\r\n            <Card product = {product} viewProductButton = {false}></Card>\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <Layout title ={product.name} discreption = {product.description} className = \"container-fluid\">\r\n            <div className = 'row'>\r\n            {singleProductsUi()}\r\n            {relatedProductsUi()}\r\n            \r\n            </div>\r\n    </Layout>\r\n    );\r\n}\r\nexport default Product;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\CartHelper.jsx",["184","185"],"const addItem = (item,next) => {\r\n    let cart = []\r\n    if(typeof window !== 'undefined')\r\n    {\r\n        if(localStorage.getItem('cart'))\r\n        {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count:1\r\n        });\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n        localStorage.setItem('cart',JSON.stringify(cart))\r\n        next();\r\n    }\r\n}\r\nconst itemTotal = () => {\r\n    if(typeof window !== 'undefined')\r\n    {\r\n        \r\n        return (JSON.parse(localStorage.getItem('cart')) !== null  && JSON.parse(localStorage.getItem('cart')).length);\r\n    }\r\n    return 0 ;\r\n}\r\nconst getItems = () => {\r\n    if(typeof window !== 'undefined')\r\n    {\r\n        return JSON.parse(localStorage.getItem('cart'))\r\n    }\r\n}\r\nconst updateItem = (productId,count) => {\r\n    let cart = []\r\n    if(typeof window !== \"undefined\")\r\n    {\r\n       \r\n        if(localStorage.getItem('cart'))\r\n        {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.map((p,i) => {\r\n            if(p._id === productId)\r\n            {\r\n                cart[i].count = count\r\n            }\r\n        })\r\n        localStorage.setItem('cart',JSON.stringify(cart))\r\n    }\r\n}\r\nconst removeItem = (productId) => {\r\n    let cart = []\r\n    if(typeof window !== \"undefined\")\r\n    {\r\n        if(localStorage.getItem('cart'))\r\n        {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.map((p,i) => {\r\n            if(p._id === productId)\r\n            {\r\n                cart.splice(i,1)\r\n            }\r\n        })\r\n        localStorage.setItem('cart',JSON.stringify(cart))\r\n    }\r\n    return cart;\r\n}\r\nconst emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n\r\nexport {addItem};\r\nexport {getItems};\r\nexport {itemTotal};\r\nexport {updateItem};\r\nexport {removeItem};\r\nexport {emptyCart};","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\Cart.jsx",[],"D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\core\\CheckOut.jsx",["186","187","188"],"import React, { useState, useEffect } from 'react';\r\nimport { getProduct, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\r\nimport { emptyCart } from './CartHelper';\r\nimport { isAuthenticate } from '../user/auth';\r\nimport { Link } from 'react-router-dom';\r\n// import \"braintree-web\"; // not using this package\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const userId = isAuthenticate() && isAuthenticate().user._id;\r\n    const token = isAuthenticate() && isAuthenticate().token;\r\n\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setData({ ...data, error: data.error });\r\n            } else {\r\n                console.log(data);\r\n                setData({ clientToken: data.clientToken });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, []);\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const getTotal = () => {\r\n        return products!== null && products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticate() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    let deliveryAddress = data.address;\r\n\r\n    const buy = () => {\r\n        setData({ loading: true });\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                // console.log(data);\r\n                nonce = data.nonce;\r\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n                // and also total to be charged\r\n                // console.log(\r\n                //     \"send nonce and total to process: \",\r\n                //     nonce,\r\n                //     getTotal(products)\r\n                // );\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                };\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                        // empty cart\r\n                        // create order\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        };\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    console.log('payment success and empty cart');\r\n                                    setData({\r\n                                        loading: false,\r\n                                        success: true,\r\n                                        reload:true\r\n                                    });\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                setData({ loading: false });\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        setData({ loading: false });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log(\"dropin error: \", error);\r\n                setData({ ...data, error: error.message });\r\n            });\r\n    };\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: '' })}>\r\n            {data.clientToken !== null && products !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"gorm-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                        />\r\n                    </div>\r\n\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            }\r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\r\n                        Pay\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            Thanks! Your payment was successful!\r\n        </div>\r\n    );\r\n\r\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\Orders.jsx",["189","190"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticate } from '../user/auth';\r\nimport { Link } from \"react-router-dom\";\r\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\r\nimport moment from \"moment\";\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [statusValues, setStatusValues] = useState([]);\r\n\r\n    const { user, token } = isAuthenticate();\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setOrders(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setStatusValues(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, []);\r\n\r\n    const showOrdersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            );\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>;\r\n        }\r\n    };\r\n\r\n    const showInput = (key, value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                className=\"form-control\"\r\n                readOnly\r\n            />\r\n        </div>\r\n    );\r\n\r\n    const handleStatusChange = (e, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\r\n            data => {\r\n                if (data.error) {\r\n                    console.log(\"Status update failed\");\r\n                } else {\r\n                    loadOrders();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const showStatus = o => (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\r\n            <select\r\n                className=\"form-control\"\r\n                onChange={e => handleStatusChange(e, o._id)}\r\n            >\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`G'day ${\r\n                user.name\r\n            }, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n\r\n                    { orders.map((o, oIndex) => {\r\n                        return (\r\n                            <div\r\n                                className=\"mt-5\"\r\n                                key={oIndex}\r\n                                style={{ borderBottom: \"5px solid indigo\" }}\r\n                            >\r\n                                <h2 className=\"mb-5\">\r\n                                    <span className=\"bg-primary\">\r\n                                        Order ID: {o._id}\r\n                                    </span>\r\n                                </h2>\r\n\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(o)}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Transaction ID: {o.transaction_id}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount: ${o.amount}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered by: {o.user !== null && o.user.name}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered on:{\" \"}\r\n                                        {moment(o.createdAt).fromNow()}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivery address: {o.address}\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                    Total products in the order:{\" \"}\r\n                                    {o.products.length}\r\n                                </h3>\r\n\r\n                                {o.products.map((p, pIndex) => (\r\n                                    <div\r\n                                        className=\"mb-4\"\r\n                                        key={pIndex}\r\n                                        style={{\r\n                                            padding: \"20px\",\r\n                                            border: \"1px solid indigo\"\r\n                                        }}\r\n                                    >\r\n                                        {showInput(\"Product name\", p.name)}\r\n                                        {showInput(\"Product price\", p.price)}\r\n                                        {showInput(\"Product total\", p.count)}\r\n                                        {showInput(\"Product Id\", p._id)}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Orders;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\ManageProduct.jsx",["191"],"import Layout from './../core/Layout';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { getproducts, deletProduct } from './apiAdmin';\r\nimport { isAuthenticate } from '../user/auth';\r\nimport { Link } from 'react-router-dom';\r\nconst ManageProduct = () => {\r\n    const [products,setProducts] = useState([{}])\r\n    const [error,setError] = useState(false)\r\n    const {user , token} = isAuthenticate();\r\n    const loadProducts = () => {\r\n        getproducts()\r\n        .then(data => {\r\n            if(data.error)\r\n            {\r\n                console.log(data.error)\r\n                setError(data.error)\r\n            }\r\n            else\r\n            {\r\n                setProducts(data)\r\n            }\r\n        })\r\n    }\r\n    const destroy = productId => {\r\n        deletProduct(user._id,token,productId)\r\n        .then(data => {\r\n            if(data.error)\r\n            {\r\n                console.log(data.error)\r\n            }\r\n            else \r\n            {\r\n                loadProducts();\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        loadProducts();\r\n    },[])\r\n    return(\r\n        <Layout title = \"Manage Products\" discreption = \"This page for Update and delete  products\" className =\"container-fluid\">\r\n            <div className = \"row\">\r\n                <div className=\"col-12\">\r\n                    <ul>\r\n                        {products.map((p,i)=>(\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\" key ={i}>\r\n                                <strong>{p.name}</strong>\r\n                                <Link to={`/admin/product/update/${p._id}`}>\r\n                                    <span className=\"btn btn-outline-success btn-sm align-middle\">\r\n                                        Update\r\n                                    </span>\r\n                                </Link>\r\n                                <span\r\n                                    onClick={() => destroy(p._id)}\r\n                                    className=\"btn btn-outline-danger btn-sm\"\r\n                                >\r\n                                    Delete\r\n                                </span>\r\n                        </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\nexport default ManageProduct","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\admin\\UpdateProduct.jsx",["192","193","194","195"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getproduct, getCategories, updateProduct } from './apiAdmin';\r\nimport { isAuthenticate } from '../user/auth';\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { user, token } = isAuthenticate();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        // categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = productId => {\r\n        getproduct(productId).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    shipping: data.shipping,\r\n                    quantity: data.quantity,\r\n                    formData: new FormData()\r\n                });\r\n                // load categories\r\n                initCategories();\r\n            }\r\n        });\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    error: false,\r\n                    redirectToProfile: true,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories !== null &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\Profile.jsx",["196","197"],"import Layout from './../core/Layout';\r\nimport { useState } from 'react';\r\nimport { isAuthenticate } from './auth';\r\nimport { readProfile, update, updateProfile } from './apiUser';\r\nimport { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nconst Profile = () => {\r\n    const [values,setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        error:'',\r\n        success: false\r\n    })\r\n    const {name,email,password,error,success} = values\r\n    const {user,token} = isAuthenticate();\r\n    const loadProfile = () =>{\r\n        readProfile(user._id,token)\r\n        .then(data => {\r\n            if(data.error)\r\n            {\r\n                console.log(data.error)\r\n                setValues({...values,error:data.error})\r\n            }\r\n            else{\r\n                setValues({...values,\r\n                    name:data.name,\r\n                    email:data.email,\r\n                    password:data.password,\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        loadProfile();\r\n    },[])\r\n    const onChangeHandler = name => e => {\r\n        setValues({...values,[name]:e.target.value})\r\n    }\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        update(user._id,token,{name,email,password})\r\n        .then(data => {\r\n            if(data.error)\r\n            {\r\n                \r\n                setValues({...values,error:data.error,success:false})\r\n            }\r\n            else{\r\n                updateProfile(data,() => {\r\n                    setValues({...values,name:data.name,email: data.email, password: data.password,success:true})\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const createUi = () => {\r\n        return(\r\n            <form>\r\n                <div className = 'form-group mb-3'>\r\n                    <label className = \"text-muted\">Name</label>\r\n                    <input className = \"form-control\" value = {name} onChange ={onChangeHandler('name')}></input>\r\n                </div>\r\n                <div className = 'form-group mb-3'>\r\n                    <label className = \"text-muted\">E-mail</label>\r\n                    <input type = \"email\" className = \"form-control\" value = {email} onChange ={onChangeHandler('email')}></input>\r\n                </div>\r\n                <div className = 'form-group mb-3'>\r\n                    <label className = \"text-muted\">Password</label>\r\n                    <input type = \"password\" className = \"form-control\" value = {password} onChange ={onChangeHandler('password')}></input>\r\n                </div>\r\n                <button className = \"btn btn-primary btn-sm\" onClick = {onSubmitHandler}>Update</button>\r\n            </form>\r\n        );\r\n    }\r\n    const redirectUser = success => {\r\n        if (success) {\r\n            return <Redirect to=\"/user/dashboard\" />;\r\n        }\r\n    };\r\n    return(\r\n        <Layout title =\"My Profile\" discreption = {`Welcome ${values.name}`} className = \"container-fluid\">\r\n            <h2>Profile Update</h2>\r\n            {createUi()}\r\n            {redirectUser(success)}\r\n        </Layout>\r\n        );\r\n}\r\nexport default Profile;","D:\\Work\\Zag System summer Training\\e-commerce-website\\e-commerce-forntend\\src\\user\\apiUser.jsx",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":13},{"ruleId":"202","severity":1,"message":"206","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":13},{"ruleId":"202","severity":1,"message":"207","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":12},{"ruleId":"208","severity":1,"message":"209","line":29,"column":8,"nodeType":"210","endLine":29,"endColumn":10,"suggestions":"211"},{"ruleId":"202","severity":1,"message":"212","line":6,"column":19,"nodeType":"204","messageId":"205","endLine":6,"endColumn":22},{"ruleId":"202","severity":1,"message":"213","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":14},{"ruleId":"202","severity":1,"message":"214","line":36,"column":9,"nodeType":"204","messageId":"205","endLine":36,"endColumn":26},{"ruleId":"208","severity":1,"message":"215","line":54,"column":7,"nodeType":"210","endLine":54,"endColumn":9,"suggestions":"216"},{"ruleId":"202","severity":1,"message":"217","line":100,"column":11,"nodeType":"204","messageId":"205","endLine":100,"endColumn":22},{"ruleId":"202","severity":1,"message":"218","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"219","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":23},{"ruleId":"202","severity":1,"message":"220","line":2,"column":18,"nodeType":"204","messageId":"205","endLine":2,"endColumn":27},{"ruleId":"202","severity":1,"message":"221","line":6,"column":18,"nodeType":"204","messageId":"205","endLine":6,"endColumn":27},{"ruleId":"202","severity":1,"message":"206","line":15,"column":12,"nodeType":"204","messageId":"205","endLine":15,"endColumn":17},{"ruleId":"202","severity":1,"message":"222","line":17,"column":18,"nodeType":"204","messageId":"205","endLine":17,"endColumn":26},{"ruleId":"208","severity":1,"message":"223","line":37,"column":6,"nodeType":"210","endLine":37,"endColumn":8,"suggestions":"224"},{"ruleId":"202","severity":1,"message":"220","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"225","line":1,"column":26,"nodeType":"204","messageId":"205","endLine":1,"endColumn":34},{"ruleId":"202","severity":1,"message":"226","line":4,"column":12,"nodeType":"204","messageId":"205","endLine":4,"endColumn":17},{"ruleId":"202","severity":1,"message":"227","line":14,"column":49,"nodeType":"204","messageId":"205","endLine":14,"endColumn":57},{"ruleId":"202","severity":1,"message":"228","line":69,"column":11,"nodeType":"204","messageId":"205","endLine":69,"endColumn":34},{"ruleId":"208","severity":1,"message":"229","line":41,"column":8,"nodeType":"210","endLine":41,"endColumn":38,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":43,"column":24,"nodeType":"233","messageId":"234","endLine":43,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":60,"column":24,"nodeType":"233","messageId":"234","endLine":60,"endColumn":26},{"ruleId":"202","severity":1,"message":"235","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"236","line":36,"column":8,"nodeType":"210","endLine":36,"endColumn":10,"suggestions":"237"},{"ruleId":"202","severity":1,"message":"238","line":65,"column":13,"nodeType":"204","messageId":"205","endLine":65,"endColumn":21},{"ruleId":"202","severity":1,"message":"213","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":14},{"ruleId":"208","severity":1,"message":"239","line":37,"column":8,"nodeType":"210","endLine":37,"endColumn":10,"suggestions":"240"},{"ruleId":"202","severity":1,"message":"206","line":9,"column":12,"nodeType":"204","messageId":"205","endLine":9,"endColumn":17},{"ruleId":"202","severity":1,"message":"213","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"241","line":31,"column":9,"nodeType":"204","messageId":"205","endLine":31,"endColumn":17},{"ruleId":"202","severity":1,"message":"242","line":32,"column":9,"nodeType":"204","messageId":"205","endLine":32,"endColumn":17},{"ruleId":"208","severity":1,"message":"243","line":76,"column":8,"nodeType":"210","endLine":76,"endColumn":10,"suggestions":"244"},{"ruleId":"202","severity":1,"message":"206","line":15,"column":32,"nodeType":"204","messageId":"205","endLine":15,"endColumn":37},{"ruleId":"208","severity":1,"message":"245","line":37,"column":7,"nodeType":"210","endLine":37,"endColumn":9,"suggestions":"246"},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'Cart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["249"],"'_id' is assigned a value but never used.","'Link' is defined but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["250"],"'showLoading' is assigned a value but never used.","'React' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'itemTotal' is defined but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadFilterResults' and 'myFilters.filter'. Either include them or remove the dependency array.",["251"],"'Fragment' is defined but never used.","'value' is assigned a value but never used.","'searched' is assigned a value but never used.","'searchedProductsResults' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["252"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getProduct' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["253"],"'getNonce' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["254"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["255"],"React Hook useEffect has a missing dependency: 'loadProfile'. Either include it or remove the dependency array.",["256"],"no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [_id, token]",{"range":"273","text":"274"},"Update the dependencies array to be: [init]",{"range":"275","text":"276"},"Update the dependencies array to be: [loadFilterResults, myFilters.filter]",{"range":"277","text":"278"},"Update the dependencies array to be: [loadSingleProduct, props.match.params.productId]",{"range":"279","text":"280"},"Update the dependencies array to be: [token, userId]",{"range":"281","text":"282"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"283","text":"284"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"285","text":"286"},"Update the dependencies array to be: [loadProfile]",{"range":"287","text":"288"},[857,859],"[_id, token]",[1364,1366],"[init]",[1130,1132],"[loadFilterResults, myFilters.filter]",[1256,1286],"[loadSingleProduct, props.match.params.productId]",[1243,1245],"[token, userId]",[1073,1075],"[loadOrders, loadStatusValues]",[2166,2168],"[init, match.params.productId]",[1080,1082],"[loadProfile]"]
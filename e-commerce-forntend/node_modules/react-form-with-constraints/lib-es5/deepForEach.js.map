{"version":3,"file":"deepForEach.js","sourceRoot":"","sources":["../src/deepForEach.ts"],"names":[],"mappings":";;;AAAA,6BAA+B;AAI/B,SAAgB,WAAW,CACzB,QAAyB,EACzB,EAA4C;IAE5C,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAA,KAAK;QACpC,IAAM,OAAO,GAAG,KAAgC,CAAC;QACjD,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,IAAI,OAAO,OAAO,CAAC,KAAK,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACzF,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SACzC;QACD,EAAE,CAAC,OAAO,CAAC,CAAC;IACd,CAAC,CAAC,CAAC;AACL,CAAC;AAXD,kCAWC","sourcesContent":["import * as React from 'react';\n\n// Recursive React.Children.forEach()\n// Taken from https://github.com/fernandopasik/react-children-utilities/blob/v0.2.2/src/index.js#L68\nexport function deepForEach(\n  children: React.ReactNode,\n  fn: (child: React.ReactElement<any>) => void\n) {\n  React.Children.forEach(children, child => {\n    const element = child as React.ReactElement<any>;\n    if (element.props && element.props.children && typeof element.props.children === 'object') {\n      deepForEach(element.props.children, fn);\n    }\n    fn(element);\n  });\n}\n"]}